{
	"id": "d59ab77712987769df3d3f2bf5e9617d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/metisrewards.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\";\n\ninterface AggregatorV3Interface {\n    function latestRoundData() external view returns (\n        uint80,\n        int256 answer,\n        uint256,\n        uint256,\n        uint80\n    );\n}\n\ncontract TMetisRewardTestnet is Ownable {\n    AggregatorV3Interface public priceFeed;\n\n    mapping(address => bool) public whitelisted;\n    mapping(address => bool) public hasClaimed;\n    address[] private eligibleAddresses;\n\n    event AddressWhitelisted(address indexed user);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event Received(address indexed from, uint256 amount);\n\n    constructor() {\n        priceFeed = AggregatorV3Interface(0x5CbB0dfcedE94DbacbDD65F2a39dddd2497dE86e);\n    }\n\n    function getRewardAmountInTMetis() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid price data\");\n        return (5 * 1e18 * 1e8) / uint256(price); // 5 USD worth\n    }\n\n    function addToWhitelist(address user) external onlyOwner {\n        require(!whitelisted[user], \"Already whitelisted\");\n        whitelisted[user] = true;\n        eligibleAddresses.push(user);\n        emit AddressWhitelisted(user);\n    }\n\n    function getEligibleAddresses() external view returns (address[] memory) {\n        return eligibleAddresses;\n    }\n\n    function claimReward() external {\n        require(whitelisted[msg.sender], \"Not whitelisted\");\n        require(!hasClaimed[msg.sender], \"Already claimed\");\n\n        uint256 rewardAmount = getRewardAmountInTMetis();\n        require(address(this).balance >= rewardAmount, \"Not enough funds\");\n\n        hasClaimed[msg.sender] = true;\n        payable(msg.sender).transfer(rewardAmount);\n        emit RewardClaimed(msg.sender, rewardAmount);\n    }\n\n    /// ✅ Get tMETIS balance (in wei) on the contract\n    function getContractNativeBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    /// ✅ Get USD equivalent of the contract’s tMETIS balance\n    function getContractUsdBalance() public view returns (uint256 usdAmount) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid price data\");\n        uint256 balance = address(this).balance;\n        usdAmount = (balance * uint256(price)) / 1e26; // because: 18 (wei) + 8 (price) - 18 (USD)\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    fallback() external payable {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"contracts/metisrewards.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"latestRoundData()": "feaf968c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/metisrewards.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/metisrewards.sol\":{\"keccak256\":\"0x3253e0e9d434fab60e4b8955f44d6c35847669d5a63e718b8838e366f76bf73a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc3f2e961dc719b14258ac46c83ca5356b5633795bb527f7ffaae94ff40fc75\",\"dweb:/ipfs/QmPTHNNmNaCCbEbxg7c2Y89o7RTy46ajrWooRsTL7BQ5sq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TMetisRewardTestnet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "AddressWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Received",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractNativeBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractUsdBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEligibleAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmountInTMetis",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/metisrewards.sol\":351:2636  contract TMetisRewardTestnet is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/metisrewards.sol\":755:863  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/metisrewards.sol\":813:855  0x5CbB0dfcedE94DbacbDD65F2a39dddd2497dE86e */\n  0x5cbb0dfcede94dbacbdd65f2a39dddd2497de86e\n    /* \"contracts/metisrewards.sol\":779:788  priceFeed */\n  0x01\n  0x00\n    /* \"contracts/metisrewards.sol\":779:856  priceFeed = AggregatorV3Interface(0x5CbB0dfcedE94DbacbDD65F2a39dddd2497dE86e) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/metisrewards.sol\":351:2636  contract TMetisRewardTestnet is Ownable {... */\n  jump(tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/metisrewards.sol\":351:2636  contract TMetisRewardTestnet is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/metisrewards.sol\":351:2636  contract TMetisRewardTestnet is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9414dd8\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa9414dd8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd936547e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc239ffd\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x4c2b944b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x73b2e80e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa523f2c7\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/metisrewards.sol\":2569:2579  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":2560:2591  Received(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874\n        /* \"contracts/metisrewards.sol\":2581:2590  msg.value */\n      callvalue\n        /* \"contracts/metisrewards.sol\":2560:2591  Received(msg.sender, msg.value) */\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/metisrewards.sol\":351:2636  contract TMetisRewardTestnet is Ownable {... */\n      stop\n    tag_2:\n      stop\n        /* \"contracts/metisrewards.sol\":869:1118  function getRewardAmountInTMetis() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/metisrewards.sol\":491:533  mapping(address => bool) public hasClaimed */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":397:435  AggregatorV3Interface public priceFeed */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":1365:1479  function getEligibleAddresses() external view returns (address[] memory) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":1989:2100  function getContractNativeBalance() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":1485:1927  function claimReward() external {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/metisrewards.sol\":442:485  mapping(address => bool) public whitelisted */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":1124:1359  function addToWhitelist(address user) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/metisrewards.sol\":2172:2512  function getContractUsdBalance() public view returns (uint256 usdAmount) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/metisrewards.sol\":869:1118  function getRewardAmountInTMetis() public view returns (uint256) {... */\n    tag_24:\n        /* \"contracts/metisrewards.sol\":925:932  uint256 */\n      0x00\n        /* \"contracts/metisrewards.sol\":947:959  int256 price */\n      dup1\n        /* \"contracts/metisrewards.sol\":969:978  priceFeed */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/metisrewards.sol\":969:994  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/metisrewards.sol\":969:996  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/metisrewards.sol\":944:996  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/metisrewards.sol\":1022:1023  0 */\n      0x00\n        /* \"contracts/metisrewards.sol\":1014:1019  price */\n      dup2\n        /* \"contracts/metisrewards.sol\":1014:1023  price > 0 */\n      sgt\n        /* \"contracts/metisrewards.sol\":1006:1046  require(price > 0, \"Invalid price data\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/metisrewards.sol\":1090:1095  price */\n      dup1\n        /* \"contracts/metisrewards.sol\":1064:1078  5 * 1e18 * 1e8 */\n      0x019d971e4fe8401e74000000\n        /* \"contracts/metisrewards.sol\":1063:1096  (5 * 1e18 * 1e8) / uint256(price) */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/metisrewards.sol\":1056:1096  return (5 * 1e18 * 1e8) / uint256(price) */\n      swap2\n      pop\n      pop\n        /* \"contracts/metisrewards.sol\":869:1118  function getRewardAmountInTMetis() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":491:533  mapping(address => bool) public hasClaimed */\n    tag_33:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":397:435  AggregatorV3Interface public priceFeed */\n    tag_38:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":1365:1479  function getEligibleAddresses() external view returns (address[] memory) {... */\n    tag_48:\n        /* \"contracts/metisrewards.sol\":1420:1436  address[] memory */\n      0x60\n        /* \"contracts/metisrewards.sol\":1455:1472  eligibleAddresses */\n      0x04\n        /* \"contracts/metisrewards.sol\":1448:1472  return eligibleAddresses */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/metisrewards.sol\":1365:1479  function getEligibleAddresses() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":1989:2100  function getContractNativeBalance() public view returns (uint256) {... */\n    tag_53:\n        /* \"contracts/metisrewards.sol\":2046:2053  uint256 */\n      0x00\n        /* \"contracts/metisrewards.sol\":2072:2093  address(this).balance */\n      selfbalance\n        /* \"contracts/metisrewards.sol\":2065:2093  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/metisrewards.sol\":1989:2100  function getContractNativeBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":1485:1927  function claimReward() external {... */\n    tag_57:\n        /* \"contracts/metisrewards.sol\":1535:1546  whitelisted */\n      0x02\n        /* \"contracts/metisrewards.sol\":1535:1558  whitelisted[msg.sender] */\n      0x00\n        /* \"contracts/metisrewards.sol\":1547:1557  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":1535:1558  whitelisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/metisrewards.sol\":1527:1578  require(whitelisted[msg.sender], \"Not whitelisted\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/metisrewards.sol\":1597:1607  hasClaimed */\n      0x03\n        /* \"contracts/metisrewards.sol\":1597:1619  hasClaimed[msg.sender] */\n      0x00\n        /* \"contracts/metisrewards.sol\":1608:1618  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":1597:1619  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/metisrewards.sol\":1596:1619  !hasClaimed[msg.sender] */\n      iszero\n        /* \"contracts/metisrewards.sol\":1588:1639  require(!hasClaimed[msg.sender], \"Already claimed\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/metisrewards.sol\":1650:1670  uint256 rewardAmount */\n      0x00\n        /* \"contracts/metisrewards.sol\":1673:1698  getRewardAmountInTMetis() */\n      tag_103\n        /* \"contracts/metisrewards.sol\":1673:1696  getRewardAmountInTMetis */\n      tag_24\n        /* \"contracts/metisrewards.sol\":1673:1698  getRewardAmountInTMetis() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/metisrewards.sol\":1650:1698  uint256 rewardAmount = getRewardAmountInTMetis() */\n      swap1\n      pop\n        /* \"contracts/metisrewards.sol\":1741:1753  rewardAmount */\n      dup1\n        /* \"contracts/metisrewards.sol\":1716:1737  address(this).balance */\n      selfbalance\n        /* \"contracts/metisrewards.sol\":1716:1753  address(this).balance >= rewardAmount */\n      lt\n      iszero\n        /* \"contracts/metisrewards.sol\":1708:1774  require(address(this).balance >= rewardAmount, \"Not enough funds\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/metisrewards.sol\":1810:1814  true */\n      0x01\n        /* \"contracts/metisrewards.sol\":1785:1795  hasClaimed */\n      0x03\n        /* \"contracts/metisrewards.sol\":1785:1807  hasClaimed[msg.sender] */\n      0x00\n        /* \"contracts/metisrewards.sol\":1796:1806  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":1785:1807  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/metisrewards.sol\":1785:1814  hasClaimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/metisrewards.sol\":1832:1842  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":1824:1852  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/metisrewards.sol\":1824:1866  payable(msg.sender).transfer(rewardAmount) */\n      0x08fc\n        /* \"contracts/metisrewards.sol\":1853:1865  rewardAmount */\n      dup3\n        /* \"contracts/metisrewards.sol\":1824:1866  payable(msg.sender).transfer(rewardAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n        /* \"contracts/metisrewards.sol\":1895:1905  msg.sender */\n      caller\n        /* \"contracts/metisrewards.sol\":1881:1920  RewardClaimed(msg.sender, rewardAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/metisrewards.sol\":1907:1919  rewardAmount */\n      dup3\n        /* \"contracts/metisrewards.sol\":1881:1920  RewardClaimed(msg.sender, rewardAmount) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/metisrewards.sol\":1517:1927  {... */\n      pop\n        /* \"contracts/metisrewards.sol\":1485:1927  function claimReward() external {... */\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":442:485  mapping(address => bool) public whitelisted */\n    tag_61:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":1124:1359  function addToWhitelist(address user) external onlyOwner {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/metisrewards.sol\":1200:1211  whitelisted */\n      0x02\n        /* \"contracts/metisrewards.sol\":1200:1217  whitelisted[user] */\n      0x00\n        /* \"contracts/metisrewards.sol\":1212:1216  user */\n      dup3\n        /* \"contracts/metisrewards.sol\":1200:1217  whitelisted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/metisrewards.sol\":1199:1217  !whitelisted[user] */\n      iszero\n        /* \"contracts/metisrewards.sol\":1191:1241  require(!whitelisted[user], \"Already whitelisted\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/metisrewards.sol\":1271:1275  true */\n      0x01\n        /* \"contracts/metisrewards.sol\":1251:1262  whitelisted */\n      0x02\n        /* \"contracts/metisrewards.sol\":1251:1268  whitelisted[user] */\n      0x00\n        /* \"contracts/metisrewards.sol\":1263:1267  user */\n      dup4\n        /* \"contracts/metisrewards.sol\":1251:1268  whitelisted[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/metisrewards.sol\":1251:1275  whitelisted[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/metisrewards.sol\":1285:1302  eligibleAddresses */\n      0x04\n        /* \"contracts/metisrewards.sol\":1308:1312  user */\n      dup2\n        /* \"contracts/metisrewards.sol\":1285:1313  eligibleAddresses.push(user) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/metisrewards.sol\":1347:1351  user */\n      dup1\n        /* \"contracts/metisrewards.sol\":1328:1352  AddressWhitelisted(user) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/metisrewards.sol\":1124:1359  function addToWhitelist(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_123\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_90\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/metisrewards.sol\":2172:2512  function getContractUsdBalance() public view returns (uint256 usdAmount) {... */\n    tag_73:\n        /* \"contracts/metisrewards.sol\":2226:2243  uint256 usdAmount */\n      0x00\n        /* \"contracts/metisrewards.sol\":2258:2270  int256 price */\n      dup1\n        /* \"contracts/metisrewards.sol\":2280:2289  priceFeed */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/metisrewards.sol\":2280:2305  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/metisrewards.sol\":2280:2307  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_127:\n        /* \"contracts/metisrewards.sol\":2255:2307  (, int256 price, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/metisrewards.sol\":2333:2334  0 */\n      0x00\n        /* \"contracts/metisrewards.sol\":2325:2330  price */\n      dup2\n        /* \"contracts/metisrewards.sol\":2325:2334  price > 0 */\n      sgt\n        /* \"contracts/metisrewards.sol\":2317:2357  require(price > 0, \"Invalid price data\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/metisrewards.sol\":2367:2382  uint256 balance */\n      0x00\n        /* \"contracts/metisrewards.sol\":2385:2406  address(this).balance */\n      selfbalance\n        /* \"contracts/metisrewards.sol\":2367:2406  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/metisrewards.sol\":2457:2461  1e26 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/metisrewards.sol\":2447:2452  price */\n      dup3\n        /* \"contracts/metisrewards.sol\":2429:2436  balance */\n      dup3\n        /* \"contracts/metisrewards.sol\":2429:2453  balance * uint256(price) */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/metisrewards.sol\":2428:2461  (balance * uint256(price)) / 1e26 */\n      tag_132\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_132:\n        /* \"contracts/metisrewards.sol\":2416:2461  usdAmount = (balance * uint256(price)) / 1e26 */\n      swap3\n      pop\n        /* \"contracts/metisrewards.sol\":2245:2512  {... */\n      pop\n      pop\n        /* \"contracts/metisrewards.sol\":2172:2512  function getContractUsdBalance() public view returns (uint256 usdAmount) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_135\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_142:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_143:\n        /* \"#utility.yul\":177:201   */\n      tag_194\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_142\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_196\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_143\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_145:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_147:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_148:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_202\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_149:\n        /* \"#utility.yul\":1076:1100   */\n      tag_204\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_205:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_150:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_207\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_149\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_32:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_210\n      tag_145\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1352:1471   */\n    tag_209:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_211\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_150\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_151:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1816   */\n    tag_152:\n        /* \"#utility.yul\":1788:1809   */\n      tag_214\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1788:1809   */\n      tag_151\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1783:1786   */\n      dup3\n        /* \"#utility.yul\":1776:1810   */\n      mstore\n        /* \"#utility.yul\":1707:1816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_35:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_216\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_152\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2098   */\n    tag_153:\n        /* \"#utility.yul\":2066:2069   */\n      0x00\n        /* \"#utility.yul\":2087:2092   */\n      dup2\n        /* \"#utility.yul\":2080:2092   */\n      swap1\n      pop\n        /* \"#utility.yul\":2038:2098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2246   */\n    tag_154:\n        /* \"#utility.yul\":2154:2163   */\n      0x00\n        /* \"#utility.yul\":2187:2240   */\n      tag_219\n        /* \"#utility.yul\":2205:2239   */\n      tag_220\n        /* \"#utility.yul\":2214:2238   */\n      tag_221\n        /* \"#utility.yul\":2232:2237   */\n      dup5\n        /* \"#utility.yul\":2214:2238   */\n      tag_147\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2205:2239   */\n      tag_153\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2187:2240   */\n      tag_147\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2174:2240   */\n      swap1\n      pop\n        /* \"#utility.yul\":2104:2246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2252:2378   */\n    tag_155:\n        /* \"#utility.yul\":2302:2311   */\n      0x00\n        /* \"#utility.yul\":2335:2372   */\n      tag_223\n        /* \"#utility.yul\":2366:2371   */\n      dup3\n        /* \"#utility.yul\":2335:2372   */\n      tag_154\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2322:2372   */\n      swap1\n      pop\n        /* \"#utility.yul\":2252:2378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2384:2538   */\n    tag_156:\n        /* \"#utility.yul\":2462:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2532   */\n      tag_225\n        /* \"#utility.yul\":2526:2531   */\n      dup3\n        /* \"#utility.yul\":2495:2532   */\n      tag_155\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2482:2532   */\n      swap1\n      pop\n        /* \"#utility.yul\":2384:2538   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2544:2731   */\n    tag_157:\n        /* \"#utility.yul\":2659:2724   */\n      tag_227\n        /* \"#utility.yul\":2718:2723   */\n      dup2\n        /* \"#utility.yul\":2659:2724   */\n      tag_156\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2654:2657   */\n      dup3\n        /* \"#utility.yul\":2647:2725   */\n      mstore\n        /* \"#utility.yul\":2544:2731   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:3015   */\n    tag_40:\n        /* \"#utility.yul\":2858:2862   */\n      0x00\n        /* \"#utility.yul\":2896:2898   */\n      0x20\n        /* \"#utility.yul\":2885:2894   */\n      dup3\n        /* \"#utility.yul\":2881:2899   */\n      add\n        /* \"#utility.yul\":2873:2899   */\n      swap1\n      pop\n        /* \"#utility.yul\":2909:3008   */\n      tag_229\n        /* \"#utility.yul\":3005:3006   */\n      0x00\n        /* \"#utility.yul\":2994:3003   */\n      dup4\n        /* \"#utility.yul\":2990:3007   */\n      add\n        /* \"#utility.yul\":2981:2987   */\n      dup5\n        /* \"#utility.yul\":2909:3008   */\n      tag_157\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2737:3015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3139   */\n    tag_158:\n        /* \"#utility.yul\":3108:3132   */\n      tag_231\n        /* \"#utility.yul\":3126:3131   */\n      dup2\n        /* \"#utility.yul\":3108:3132   */\n      tag_148\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3103:3106   */\n      dup3\n        /* \"#utility.yul\":3096:3133   */\n      mstore\n        /* \"#utility.yul\":3021:3139   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3145:3367   */\n    tag_45:\n        /* \"#utility.yul\":3238:3242   */\n      0x00\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"#utility.yul\":3265:3274   */\n      dup3\n        /* \"#utility.yul\":3261:3279   */\n      add\n        /* \"#utility.yul\":3253:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":3289:3360   */\n      tag_233\n        /* \"#utility.yul\":3357:3358   */\n      0x00\n        /* \"#utility.yul\":3346:3355   */\n      dup4\n        /* \"#utility.yul\":3342:3359   */\n      add\n        /* \"#utility.yul\":3333:3339   */\n      dup5\n        /* \"#utility.yul\":3289:3360   */\n      tag_158\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3145:3367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3373:3487   */\n    tag_159:\n        /* \"#utility.yul\":3440:3446   */\n      0x00\n        /* \"#utility.yul\":3474:3479   */\n      dup2\n        /* \"#utility.yul\":3468:3480   */\n      mload\n        /* \"#utility.yul\":3458:3480   */\n      swap1\n      pop\n        /* \"#utility.yul\":3373:3487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3677   */\n    tag_160:\n        /* \"#utility.yul\":3592:3603   */\n      0x00\n        /* \"#utility.yul\":3626:3632   */\n      dup3\n        /* \"#utility.yul\":3621:3624   */\n      dup3\n        /* \"#utility.yul\":3614:3633   */\n      mstore\n        /* \"#utility.yul\":3666:3670   */\n      0x20\n        /* \"#utility.yul\":3661:3664   */\n      dup3\n        /* \"#utility.yul\":3657:3671   */\n      add\n        /* \"#utility.yul\":3642:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3815   */\n    tag_161:\n        /* \"#utility.yul\":3750:3754   */\n      0x00\n        /* \"#utility.yul\":3773:3776   */\n      dup2\n        /* \"#utility.yul\":3765:3776   */\n      swap1\n      pop\n        /* \"#utility.yul\":3803:3807   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3808   */\n      add\n        /* \"#utility.yul\":3786:3808   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:3929   */\n    tag_162:\n        /* \"#utility.yul\":3898:3922   */\n      tag_238\n        /* \"#utility.yul\":3916:3921   */\n      dup2\n        /* \"#utility.yul\":3898:3922   */\n      tag_148\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3893:3896   */\n      dup3\n        /* \"#utility.yul\":3886:3923   */\n      mstore\n        /* \"#utility.yul\":3821:3929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4114   */\n    tag_163:\n        /* \"#utility.yul\":4004:4014   */\n      0x00\n        /* \"#utility.yul\":4025:4071   */\n      tag_240\n        /* \"#utility.yul\":4067:4070   */\n      dup4\n        /* \"#utility.yul\":4059:4065   */\n      dup4\n        /* \"#utility.yul\":4025:4071   */\n      tag_162\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4103:4107   */\n      0x20\n        /* \"#utility.yul\":4098:4101   */\n      dup4\n        /* \"#utility.yul\":4094:4108   */\n      add\n        /* \"#utility.yul\":4080:4108   */\n      swap1\n      pop\n        /* \"#utility.yul\":3935:4114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4120:4233   */\n    tag_164:\n        /* \"#utility.yul\":4190:4194   */\n      0x00\n        /* \"#utility.yul\":4222:4226   */\n      0x20\n        /* \"#utility.yul\":4217:4220   */\n      dup3\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4205:4227   */\n      swap1\n      pop\n        /* \"#utility.yul\":4120:4233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4269:5001   */\n    tag_165:\n        /* \"#utility.yul\":4388:4391   */\n      0x00\n        /* \"#utility.yul\":4417:4471   */\n      tag_243\n        /* \"#utility.yul\":4465:4470   */\n      dup3\n        /* \"#utility.yul\":4417:4471   */\n      tag_159\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4487:4573   */\n      tag_244\n        /* \"#utility.yul\":4566:4572   */\n      dup2\n        /* \"#utility.yul\":4561:4564   */\n      dup6\n        /* \"#utility.yul\":4487:4573   */\n      tag_160\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4480:4573   */\n      swap4\n      pop\n        /* \"#utility.yul\":4597:4653   */\n      tag_245\n        /* \"#utility.yul\":4647:4652   */\n      dup4\n        /* \"#utility.yul\":4597:4653   */\n      tag_161\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4676:4683   */\n      dup1\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4692:4976   */\n    tag_246:\n        /* \"#utility.yul\":4717:4723   */\n      dup4\n        /* \"#utility.yul\":4714:4715   */\n      dup2\n        /* \"#utility.yul\":4711:4724   */\n      lt\n        /* \"#utility.yul\":4692:4976   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":4793:4799   */\n      dup2\n        /* \"#utility.yul\":4787:4800   */\n      mload\n        /* \"#utility.yul\":4820:4883   */\n      tag_249\n        /* \"#utility.yul\":4879:4882   */\n      dup9\n        /* \"#utility.yul\":4864:4877   */\n      dup3\n        /* \"#utility.yul\":4820:4883   */\n      tag_163\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4813:4883   */\n      swap8\n      pop\n        /* \"#utility.yul\":4906:4966   */\n      tag_250\n        /* \"#utility.yul\":4959:4965   */\n      dup4\n        /* \"#utility.yul\":4906:4966   */\n      tag_164\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4896:4966   */\n      swap3\n      pop\n        /* \"#utility.yul\":4752:4976   */\n      pop\n        /* \"#utility.yul\":4739:4740   */\n      0x01\n        /* \"#utility.yul\":4736:4737   */\n      dup2\n        /* \"#utility.yul\":4732:4741   */\n      add\n        /* \"#utility.yul\":4727:4741   */\n      swap1\n      pop\n        /* \"#utility.yul\":4692:4976   */\n      jump(tag_246)\n    tag_248:\n        /* \"#utility.yul\":4696:4710   */\n      pop\n        /* \"#utility.yul\":4992:4995   */\n      dup6\n        /* \"#utility.yul\":4985:4995   */\n      swap4\n      pop\n        /* \"#utility.yul\":4393:5001   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4269:5001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5380   */\n    tag_50:\n        /* \"#utility.yul\":5150:5154   */\n      0x00\n        /* \"#utility.yul\":5188:5190   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5173:5191   */\n      add\n        /* \"#utility.yul\":5165:5191   */\n      swap1\n      pop\n        /* \"#utility.yul\":5237:5246   */\n      dup2\n        /* \"#utility.yul\":5231:5235   */\n      dup2\n        /* \"#utility.yul\":5227:5247   */\n      sub\n        /* \"#utility.yul\":5223:5224   */\n      0x00\n        /* \"#utility.yul\":5212:5221   */\n      dup4\n        /* \"#utility.yul\":5208:5225   */\n      add\n        /* \"#utility.yul\":5201:5248   */\n      mstore\n        /* \"#utility.yul\":5265:5373   */\n      tag_252\n        /* \"#utility.yul\":5368:5372   */\n      dup2\n        /* \"#utility.yul\":5359:5365   */\n      dup5\n        /* \"#utility.yul\":5265:5373   */\n      tag_165\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5257:5373   */\n      swap1\n      pop\n        /* \"#utility.yul\":5007:5380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5386:5491   */\n    tag_166:\n        /* \"#utility.yul\":5422:5429   */\n      0x00\n        /* \"#utility.yul\":5462:5484   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":5455:5460   */\n      dup3\n        /* \"#utility.yul\":5451:5485   */\n      and\n        /* \"#utility.yul\":5440:5485   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5497:5617   */\n    tag_167:\n        /* \"#utility.yul\":5569:5592   */\n      tag_255\n        /* \"#utility.yul\":5586:5591   */\n      dup2\n        /* \"#utility.yul\":5569:5592   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5562:5567   */\n      dup2\n        /* \"#utility.yul\":5559:5593   */\n      eq\n        /* \"#utility.yul\":5549:5611   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":5607:5608   */\n      0x00\n        /* \"#utility.yul\":5604:5605   */\n      dup1\n        /* \"#utility.yul\":5597:5609   */\n      revert\n        /* \"#utility.yul\":5549:5611   */\n    tag_256:\n        /* \"#utility.yul\":5497:5617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5764   */\n    tag_168:\n        /* \"#utility.yul\":5679:5684   */\n      0x00\n        /* \"#utility.yul\":5710:5716   */\n      dup2\n        /* \"#utility.yul\":5704:5717   */\n      mload\n        /* \"#utility.yul\":5695:5717   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:5758   */\n      tag_258\n        /* \"#utility.yul\":5752:5757   */\n      dup2\n        /* \"#utility.yul\":5726:5758   */\n      tag_167\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5623:5764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5770:5846   */\n    tag_169:\n        /* \"#utility.yul\":5806:5813   */\n      0x00\n        /* \"#utility.yul\":5835:5840   */\n      dup2\n        /* \"#utility.yul\":5824:5840   */\n      swap1\n      pop\n        /* \"#utility.yul\":5770:5846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5852:5972   */\n    tag_170:\n        /* \"#utility.yul\":5924:5947   */\n      tag_261\n        /* \"#utility.yul\":5941:5946   */\n      dup2\n        /* \"#utility.yul\":5924:5947   */\n      tag_169\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5917:5922   */\n      dup2\n        /* \"#utility.yul\":5914:5948   */\n      eq\n        /* \"#utility.yul\":5904:5966   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5959:5960   */\n      dup1\n        /* \"#utility.yul\":5952:5964   */\n      revert\n        /* \"#utility.yul\":5904:5966   */\n    tag_262:\n        /* \"#utility.yul\":5852:5972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5978:6119   */\n    tag_171:\n        /* \"#utility.yul\":6034:6039   */\n      0x00\n        /* \"#utility.yul\":6065:6071   */\n      dup2\n        /* \"#utility.yul\":6059:6072   */\n      mload\n        /* \"#utility.yul\":6050:6072   */\n      swap1\n      pop\n        /* \"#utility.yul\":6081:6113   */\n      tag_264\n        /* \"#utility.yul\":6107:6112   */\n      dup2\n        /* \"#utility.yul\":6081:6113   */\n      tag_170\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5978:6119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6247   */\n    tag_172:\n        /* \"#utility.yul\":6198:6222   */\n      tag_266\n        /* \"#utility.yul\":6216:6221   */\n      dup2\n        /* \"#utility.yul\":6198:6222   */\n      tag_142\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6191:6196   */\n      dup2\n        /* \"#utility.yul\":6188:6223   */\n      eq\n        /* \"#utility.yul\":6178:6241   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":6237:6238   */\n      0x00\n        /* \"#utility.yul\":6234:6235   */\n      dup1\n        /* \"#utility.yul\":6227:6239   */\n      revert\n        /* \"#utility.yul\":6178:6241   */\n    tag_267:\n        /* \"#utility.yul\":6125:6247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6253:6396   */\n    tag_173:\n        /* \"#utility.yul\":6310:6315   */\n      0x00\n        /* \"#utility.yul\":6341:6347   */\n      dup2\n        /* \"#utility.yul\":6335:6348   */\n      mload\n        /* \"#utility.yul\":6326:6348   */\n      swap1\n      pop\n        /* \"#utility.yul\":6357:6390   */\n      tag_269\n        /* \"#utility.yul\":6384:6389   */\n      dup2\n        /* \"#utility.yul\":6357:6390   */\n      tag_172\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6253:6396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6402:7373   */\n    tag_79:\n        /* \"#utility.yul\":6505:6511   */\n      0x00\n        /* \"#utility.yul\":6513:6519   */\n      dup1\n        /* \"#utility.yul\":6521:6527   */\n      0x00\n        /* \"#utility.yul\":6529:6535   */\n      dup1\n        /* \"#utility.yul\":6537:6543   */\n      0x00\n        /* \"#utility.yul\":6586:6589   */\n      0xa0\n        /* \"#utility.yul\":6574:6583   */\n      dup7\n        /* \"#utility.yul\":6565:6572   */\n      dup9\n        /* \"#utility.yul\":6561:6584   */\n      sub\n        /* \"#utility.yul\":6557:6590   */\n      slt\n        /* \"#utility.yul\":6554:6674   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":6593:6672   */\n      tag_272\n      tag_145\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6554:6674   */\n    tag_271:\n        /* \"#utility.yul\":6713:6714   */\n      0x00\n        /* \"#utility.yul\":6738:6801   */\n      tag_273\n        /* \"#utility.yul\":6793:6800   */\n      dup9\n        /* \"#utility.yul\":6784:6790   */\n      dup3\n        /* \"#utility.yul\":6773:6782   */\n      dup10\n        /* \"#utility.yul\":6769:6791   */\n      add\n        /* \"#utility.yul\":6738:6801   */\n      tag_168\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6728:6801   */\n      swap6\n      pop\n        /* \"#utility.yul\":6684:6811   */\n      pop\n        /* \"#utility.yul\":6850:6852   */\n      0x20\n        /* \"#utility.yul\":6876:6939   */\n      tag_274\n        /* \"#utility.yul\":6931:6938   */\n      dup9\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6911:6920   */\n      dup10\n        /* \"#utility.yul\":6907:6929   */\n      add\n        /* \"#utility.yul\":6876:6939   */\n      tag_171\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":6866:6939   */\n      swap5\n      pop\n        /* \"#utility.yul\":6821:6949   */\n      pop\n        /* \"#utility.yul\":6988:6990   */\n      0x40\n        /* \"#utility.yul\":7014:7078   */\n      tag_275\n        /* \"#utility.yul\":7070:7077   */\n      dup9\n        /* \"#utility.yul\":7061:7067   */\n      dup3\n        /* \"#utility.yul\":7050:7059   */\n      dup10\n        /* \"#utility.yul\":7046:7068   */\n      add\n        /* \"#utility.yul\":7014:7078   */\n      tag_173\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7004:7078   */\n      swap4\n      pop\n        /* \"#utility.yul\":6959:7088   */\n      pop\n        /* \"#utility.yul\":7127:7129   */\n      0x60\n        /* \"#utility.yul\":7153:7217   */\n      tag_276\n        /* \"#utility.yul\":7209:7216   */\n      dup9\n        /* \"#utility.yul\":7200:7206   */\n      dup3\n        /* \"#utility.yul\":7189:7198   */\n      dup10\n        /* \"#utility.yul\":7185:7207   */\n      add\n        /* \"#utility.yul\":7153:7217   */\n      tag_173\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7143:7217   */\n      swap3\n      pop\n        /* \"#utility.yul\":7098:7227   */\n      pop\n        /* \"#utility.yul\":7266:7269   */\n      0x80\n        /* \"#utility.yul\":7293:7356   */\n      tag_277\n        /* \"#utility.yul\":7348:7355   */\n      dup9\n        /* \"#utility.yul\":7339:7345   */\n      dup3\n        /* \"#utility.yul\":7328:7337   */\n      dup10\n        /* \"#utility.yul\":7324:7346   */\n      add\n        /* \"#utility.yul\":7293:7356   */\n      tag_168\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7283:7356   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7366   */\n      pop\n        /* \"#utility.yul\":6402:7373   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7379:7548   */\n    tag_174:\n        /* \"#utility.yul\":7463:7474   */\n      0x00\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7492:7495   */\n      dup3\n        /* \"#utility.yul\":7485:7504   */\n      mstore\n        /* \"#utility.yul\":7537:7541   */\n      0x20\n        /* \"#utility.yul\":7532:7535   */\n      dup3\n        /* \"#utility.yul\":7528:7542   */\n      add\n        /* \"#utility.yul\":7513:7542   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7554:7722   */\n    tag_175:\n        /* \"#utility.yul\":7694:7714   */\n      0x496e76616c696420707269636520646174610000000000000000000000000000\n        /* \"#utility.yul\":7690:7691   */\n      0x00\n        /* \"#utility.yul\":7682:7688   */\n      dup3\n        /* \"#utility.yul\":7678:7692   */\n      add\n        /* \"#utility.yul\":7671:7715   */\n      mstore\n        /* \"#utility.yul\":7554:7722   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:8094   */\n    tag_176:\n        /* \"#utility.yul\":7870:7873   */\n      0x00\n        /* \"#utility.yul\":7891:7958   */\n      tag_281\n        /* \"#utility.yul\":7955:7957   */\n      0x12\n        /* \"#utility.yul\":7950:7953   */\n      dup4\n        /* \"#utility.yul\":7891:7958   */\n      tag_174\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7884:7958   */\n      swap2\n      pop\n        /* \"#utility.yul\":7967:8060   */\n      tag_282\n        /* \"#utility.yul\":8056:8059   */\n      dup3\n        /* \"#utility.yul\":7967:8060   */\n      tag_175\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8085:8087   */\n      0x20\n        /* \"#utility.yul\":8080:8083   */\n      dup3\n        /* \"#utility.yul\":8076:8088   */\n      add\n        /* \"#utility.yul\":8069:8088   */\n      swap1\n      pop\n        /* \"#utility.yul\":7728:8094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8100:8519   */\n    tag_82:\n        /* \"#utility.yul\":8266:8270   */\n      0x00\n        /* \"#utility.yul\":8304:8306   */\n      0x20\n        /* \"#utility.yul\":8293:8302   */\n      dup3\n        /* \"#utility.yul\":8289:8307   */\n      add\n        /* \"#utility.yul\":8281:8307   */\n      swap1\n      pop\n        /* \"#utility.yul\":8353:8362   */\n      dup2\n        /* \"#utility.yul\":8347:8351   */\n      dup2\n        /* \"#utility.yul\":8343:8363   */\n      sub\n        /* \"#utility.yul\":8339:8340   */\n      0x00\n        /* \"#utility.yul\":8328:8337   */\n      dup4\n        /* \"#utility.yul\":8324:8341   */\n      add\n        /* \"#utility.yul\":8317:8364   */\n      mstore\n        /* \"#utility.yul\":8381:8512   */\n      tag_284\n        /* \"#utility.yul\":8507:8511   */\n      dup2\n        /* \"#utility.yul\":8381:8512   */\n      tag_176\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8373:8512   */\n      swap1\n      pop\n        /* \"#utility.yul\":8100:8519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8525:8705   */\n    tag_177:\n        /* \"#utility.yul\":8573:8650   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8570:8571   */\n      0x00\n        /* \"#utility.yul\":8563:8651   */\n      mstore\n        /* \"#utility.yul\":8670:8674   */\n      0x12\n        /* \"#utility.yul\":8667:8668   */\n      0x04\n        /* \"#utility.yul\":8660:8675   */\n      mstore\n        /* \"#utility.yul\":8694:8698   */\n      0x24\n        /* \"#utility.yul\":8691:8692   */\n      0x00\n        /* \"#utility.yul\":8684:8699   */\n      revert\n        /* \"#utility.yul\":8711:8891   */\n    tag_178:\n        /* \"#utility.yul\":8759:8836   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8756:8757   */\n      0x00\n        /* \"#utility.yul\":8749:8837   */\n      mstore\n        /* \"#utility.yul\":8856:8860   */\n      0x11\n        /* \"#utility.yul\":8853:8854   */\n      0x04\n        /* \"#utility.yul\":8846:8861   */\n      mstore\n        /* \"#utility.yul\":8880:8884   */\n      0x24\n        /* \"#utility.yul\":8877:8878   */\n      0x00\n        /* \"#utility.yul\":8870:8885   */\n      revert\n        /* \"#utility.yul\":8897:9082   */\n    tag_84:\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8954:8974   */\n      tag_288\n        /* \"#utility.yul\":8972:8973   */\n      dup3\n        /* \"#utility.yul\":8954:8974   */\n      tag_142\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":8949:8974   */\n      swap2\n      pop\n        /* \"#utility.yul\":8988:9008   */\n      tag_289\n        /* \"#utility.yul\":9006:9007   */\n      dup4\n        /* \"#utility.yul\":8988:9008   */\n      tag_142\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8983:9008   */\n      swap3\n      pop\n        /* \"#utility.yul\":9027:9028   */\n      dup3\n        /* \"#utility.yul\":9017:9052   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":9032:9050   */\n      tag_291\n      tag_177\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9017:9052   */\n    tag_290:\n        /* \"#utility.yul\":9074:9075   */\n      dup3\n        /* \"#utility.yul\":9071:9072   */\n      dup3\n        /* \"#utility.yul\":9067:9076   */\n      div\n        /* \"#utility.yul\":9062:9076   */\n      swap1\n      pop\n        /* \"#utility.yul\":8897:9082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9088:9253   */\n    tag_179:\n        /* \"#utility.yul\":9228:9245   */\n      0x4e6f742077686974656c69737465640000000000000000000000000000000000\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9216:9222   */\n      dup3\n        /* \"#utility.yul\":9212:9226   */\n      add\n        /* \"#utility.yul\":9205:9246   */\n      mstore\n        /* \"#utility.yul\":9088:9253   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9259:9625   */\n    tag_180:\n        /* \"#utility.yul\":9401:9404   */\n      0x00\n        /* \"#utility.yul\":9422:9489   */\n      tag_294\n        /* \"#utility.yul\":9486:9488   */\n      0x0f\n        /* \"#utility.yul\":9481:9484   */\n      dup4\n        /* \"#utility.yul\":9422:9489   */\n      tag_174\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9415:9489   */\n      swap2\n      pop\n        /* \"#utility.yul\":9498:9591   */\n      tag_295\n        /* \"#utility.yul\":9587:9590   */\n      dup3\n        /* \"#utility.yul\":9498:9591   */\n      tag_179\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9616:9618   */\n      0x20\n        /* \"#utility.yul\":9611:9614   */\n      dup3\n        /* \"#utility.yul\":9607:9619   */\n      add\n        /* \"#utility.yul\":9600:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9259:9625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9631:10050   */\n    tag_99:\n        /* \"#utility.yul\":9797:9801   */\n      0x00\n        /* \"#utility.yul\":9835:9837   */\n      0x20\n        /* \"#utility.yul\":9824:9833   */\n      dup3\n        /* \"#utility.yul\":9820:9838   */\n      add\n        /* \"#utility.yul\":9812:9838   */\n      swap1\n      pop\n        /* \"#utility.yul\":9884:9893   */\n      dup2\n        /* \"#utility.yul\":9878:9882   */\n      dup2\n        /* \"#utility.yul\":9874:9894   */\n      sub\n        /* \"#utility.yul\":9870:9871   */\n      0x00\n        /* \"#utility.yul\":9859:9868   */\n      dup4\n        /* \"#utility.yul\":9855:9872   */\n      add\n        /* \"#utility.yul\":9848:9895   */\n      mstore\n        /* \"#utility.yul\":9912:10043   */\n      tag_297\n        /* \"#utility.yul\":10038:10042   */\n      dup2\n        /* \"#utility.yul\":9912:10043   */\n      tag_180\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9904:10043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9631:10050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10056:10221   */\n    tag_181:\n        /* \"#utility.yul\":10196:10213   */\n      0x416c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":10192:10193   */\n      0x00\n        /* \"#utility.yul\":10184:10190   */\n      dup3\n        /* \"#utility.yul\":10180:10194   */\n      add\n        /* \"#utility.yul\":10173:10214   */\n      mstore\n        /* \"#utility.yul\":10056:10221   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10227:10593   */\n    tag_182:\n        /* \"#utility.yul\":10369:10372   */\n      0x00\n        /* \"#utility.yul\":10390:10457   */\n      tag_300\n        /* \"#utility.yul\":10454:10456   */\n      0x0f\n        /* \"#utility.yul\":10449:10452   */\n      dup4\n        /* \"#utility.yul\":10390:10457   */\n      tag_174\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10383:10457   */\n      swap2\n      pop\n        /* \"#utility.yul\":10466:10559   */\n      tag_301\n        /* \"#utility.yul\":10555:10558   */\n      dup3\n        /* \"#utility.yul\":10466:10559   */\n      tag_181\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10584:10586   */\n      0x20\n        /* \"#utility.yul\":10579:10582   */\n      dup3\n        /* \"#utility.yul\":10575:10587   */\n      add\n        /* \"#utility.yul\":10568:10587   */\n      swap1\n      pop\n        /* \"#utility.yul\":10227:10593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10599:11018   */\n    tag_102:\n        /* \"#utility.yul\":10765:10769   */\n      0x00\n        /* \"#utility.yul\":10803:10805   */\n      0x20\n        /* \"#utility.yul\":10792:10801   */\n      dup3\n        /* \"#utility.yul\":10788:10806   */\n      add\n        /* \"#utility.yul\":10780:10806   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:10861   */\n      dup2\n        /* \"#utility.yul\":10846:10850   */\n      dup2\n        /* \"#utility.yul\":10842:10862   */\n      sub\n        /* \"#utility.yul\":10838:10839   */\n      0x00\n        /* \"#utility.yul\":10827:10836   */\n      dup4\n        /* \"#utility.yul\":10823:10840   */\n      add\n        /* \"#utility.yul\":10816:10863   */\n      mstore\n        /* \"#utility.yul\":10880:11011   */\n      tag_303\n        /* \"#utility.yul\":11006:11010   */\n      dup2\n        /* \"#utility.yul\":10880:11011   */\n      tag_182\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10872:11011   */\n      swap1\n      pop\n        /* \"#utility.yul\":10599:11018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11024:11190   */\n    tag_183:\n        /* \"#utility.yul\":11164:11182   */\n      0x4e6f7420656e6f7567682066756e647300000000000000000000000000000000\n        /* \"#utility.yul\":11160:11161   */\n      0x00\n        /* \"#utility.yul\":11152:11158   */\n      dup3\n        /* \"#utility.yul\":11148:11162   */\n      add\n        /* \"#utility.yul\":11141:11183   */\n      mstore\n        /* \"#utility.yul\":11024:11190   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11196:11562   */\n    tag_184:\n        /* \"#utility.yul\":11338:11341   */\n      0x00\n        /* \"#utility.yul\":11359:11426   */\n      tag_306\n        /* \"#utility.yul\":11423:11425   */\n      0x10\n        /* \"#utility.yul\":11418:11421   */\n      dup4\n        /* \"#utility.yul\":11359:11426   */\n      tag_174\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11352:11426   */\n      swap2\n      pop\n        /* \"#utility.yul\":11435:11528   */\n      tag_307\n        /* \"#utility.yul\":11524:11527   */\n      dup3\n        /* \"#utility.yul\":11435:11528   */\n      tag_183\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11553:11555   */\n      0x20\n        /* \"#utility.yul\":11548:11551   */\n      dup3\n        /* \"#utility.yul\":11544:11556   */\n      add\n        /* \"#utility.yul\":11537:11556   */\n      swap1\n      pop\n        /* \"#utility.yul\":11196:11562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11568:11987   */\n    tag_106:\n        /* \"#utility.yul\":11734:11738   */\n      0x00\n        /* \"#utility.yul\":11772:11774   */\n      0x20\n        /* \"#utility.yul\":11761:11770   */\n      dup3\n        /* \"#utility.yul\":11757:11775   */\n      add\n        /* \"#utility.yul\":11749:11775   */\n      swap1\n      pop\n        /* \"#utility.yul\":11821:11830   */\n      dup2\n        /* \"#utility.yul\":11815:11819   */\n      dup2\n        /* \"#utility.yul\":11811:11831   */\n      sub\n        /* \"#utility.yul\":11807:11808   */\n      0x00\n        /* \"#utility.yul\":11796:11805   */\n      dup4\n        /* \"#utility.yul\":11792:11809   */\n      add\n        /* \"#utility.yul\":11785:11832   */\n      mstore\n        /* \"#utility.yul\":11849:11980   */\n      tag_309\n        /* \"#utility.yul\":11975:11979   */\n      dup2\n        /* \"#utility.yul\":11849:11980   */\n      tag_184\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11841:11980   */\n      swap1\n      pop\n        /* \"#utility.yul\":11568:11987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11993:12162   */\n    tag_185:\n        /* \"#utility.yul\":12133:12154   */\n      0x416c72656164792077686974656c697374656400000000000000000000000000\n        /* \"#utility.yul\":12129:12130   */\n      0x00\n        /* \"#utility.yul\":12121:12127   */\n      dup3\n        /* \"#utility.yul\":12117:12131   */\n      add\n        /* \"#utility.yul\":12110:12155   */\n      mstore\n        /* \"#utility.yul\":11993:12162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12534   */\n    tag_186:\n        /* \"#utility.yul\":12310:12313   */\n      0x00\n        /* \"#utility.yul\":12331:12398   */\n      tag_312\n        /* \"#utility.yul\":12395:12397   */\n      0x13\n        /* \"#utility.yul\":12390:12393   */\n      dup4\n        /* \"#utility.yul\":12331:12398   */\n      tag_174\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12324:12398   */\n      swap2\n      pop\n        /* \"#utility.yul\":12407:12500   */\n      tag_313\n        /* \"#utility.yul\":12496:12499   */\n      dup3\n        /* \"#utility.yul\":12407:12500   */\n      tag_185\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12525:12527   */\n      0x20\n        /* \"#utility.yul\":12520:12523   */\n      dup3\n        /* \"#utility.yul\":12516:12528   */\n      add\n        /* \"#utility.yul\":12509:12528   */\n      swap1\n      pop\n        /* \"#utility.yul\":12168:12534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12540:12959   */\n    tag_115:\n        /* \"#utility.yul\":12706:12710   */\n      0x00\n        /* \"#utility.yul\":12744:12746   */\n      0x20\n        /* \"#utility.yul\":12733:12742   */\n      dup3\n        /* \"#utility.yul\":12729:12747   */\n      add\n        /* \"#utility.yul\":12721:12747   */\n      swap1\n      pop\n        /* \"#utility.yul\":12793:12802   */\n      dup2\n        /* \"#utility.yul\":12787:12791   */\n      dup2\n        /* \"#utility.yul\":12783:12803   */\n      sub\n        /* \"#utility.yul\":12779:12780   */\n      0x00\n        /* \"#utility.yul\":12768:12777   */\n      dup4\n        /* \"#utility.yul\":12764:12781   */\n      add\n        /* \"#utility.yul\":12757:12804   */\n      mstore\n        /* \"#utility.yul\":12821:12952   */\n      tag_315\n        /* \"#utility.yul\":12947:12951   */\n      dup2\n        /* \"#utility.yul\":12821:12952   */\n      tag_186\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12813:12952   */\n      swap1\n      pop\n        /* \"#utility.yul\":12540:12959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12965:13190   */\n    tag_187:\n        /* \"#utility.yul\":13105:13139   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13101:13102   */\n      0x00\n        /* \"#utility.yul\":13093:13099   */\n      dup3\n        /* \"#utility.yul\":13089:13103   */\n      add\n        /* \"#utility.yul\":13082:13140   */\n      mstore\n        /* \"#utility.yul\":13174:13182   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13169:13171   */\n      0x20\n        /* \"#utility.yul\":13161:13167   */\n      dup3\n        /* \"#utility.yul\":13157:13172   */\n      add\n        /* \"#utility.yul\":13150:13183   */\n      mstore\n        /* \"#utility.yul\":12965:13190   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13196:13562   */\n    tag_188:\n        /* \"#utility.yul\":13338:13341   */\n      0x00\n        /* \"#utility.yul\":13359:13426   */\n      tag_318\n        /* \"#utility.yul\":13423:13425   */\n      0x26\n        /* \"#utility.yul\":13418:13421   */\n      dup4\n        /* \"#utility.yul\":13359:13426   */\n      tag_174\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":13352:13426   */\n      swap2\n      pop\n        /* \"#utility.yul\":13435:13528   */\n      tag_319\n        /* \"#utility.yul\":13524:13527   */\n      dup3\n        /* \"#utility.yul\":13435:13528   */\n      tag_187\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":13553:13555   */\n      0x40\n        /* \"#utility.yul\":13548:13551   */\n      dup3\n        /* \"#utility.yul\":13544:13556   */\n      add\n        /* \"#utility.yul\":13537:13556   */\n      swap1\n      pop\n        /* \"#utility.yul\":13196:13562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13568:13987   */\n    tag_122:\n        /* \"#utility.yul\":13734:13738   */\n      0x00\n        /* \"#utility.yul\":13772:13774   */\n      0x20\n        /* \"#utility.yul\":13761:13770   */\n      dup3\n        /* \"#utility.yul\":13757:13775   */\n      add\n        /* \"#utility.yul\":13749:13775   */\n      swap1\n      pop\n        /* \"#utility.yul\":13821:13830   */\n      dup2\n        /* \"#utility.yul\":13815:13819   */\n      dup2\n        /* \"#utility.yul\":13811:13831   */\n      sub\n        /* \"#utility.yul\":13807:13808   */\n      0x00\n        /* \"#utility.yul\":13796:13805   */\n      dup4\n        /* \"#utility.yul\":13792:13809   */\n      add\n        /* \"#utility.yul\":13785:13832   */\n      mstore\n        /* \"#utility.yul\":13849:13980   */\n      tag_321\n        /* \"#utility.yul\":13975:13979   */\n      dup2\n        /* \"#utility.yul\":13849:13980   */\n      tag_188\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":13841:13980   */\n      swap1\n      pop\n        /* \"#utility.yul\":13568:13987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13993:14403   */\n    tag_131:\n        /* \"#utility.yul\":14033:14040   */\n      0x00\n        /* \"#utility.yul\":14056:14076   */\n      tag_323\n        /* \"#utility.yul\":14074:14075   */\n      dup3\n        /* \"#utility.yul\":14056:14076   */\n      tag_142\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":14051:14076   */\n      swap2\n      pop\n        /* \"#utility.yul\":14090:14110   */\n      tag_324\n        /* \"#utility.yul\":14108:14109   */\n      dup4\n        /* \"#utility.yul\":14090:14110   */\n      tag_142\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":14085:14110   */\n      swap3\n      pop\n        /* \"#utility.yul\":14145:14146   */\n      dup3\n        /* \"#utility.yul\":14142:14143   */\n      dup3\n        /* \"#utility.yul\":14138:14147   */\n      mul\n        /* \"#utility.yul\":14167:14197   */\n      tag_325\n        /* \"#utility.yul\":14185:14196   */\n      dup2\n        /* \"#utility.yul\":14167:14197   */\n      tag_142\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14156:14197   */\n      swap2\n      pop\n        /* \"#utility.yul\":14346:14347   */\n      dup3\n        /* \"#utility.yul\":14337:14344   */\n      dup3\n        /* \"#utility.yul\":14333:14348   */\n      div\n        /* \"#utility.yul\":14330:14331   */\n      dup5\n        /* \"#utility.yul\":14327:14349   */\n      eq\n        /* \"#utility.yul\":14307:14308   */\n      dup4\n        /* \"#utility.yul\":14300:14309   */\n      iszero\n        /* \"#utility.yul\":14280:14363   */\n      or\n        /* \"#utility.yul\":14257:14396   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":14376:14394   */\n      tag_327\n      tag_178\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":14257:14396   */\n    tag_326:\n        /* \"#utility.yul\":14041:14403   */\n      pop\n        /* \"#utility.yul\":13993:14403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14409:14591   */\n    tag_189:\n        /* \"#utility.yul\":14549:14583   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14545:14546   */\n      0x00\n        /* \"#utility.yul\":14537:14543   */\n      dup3\n        /* \"#utility.yul\":14533:14547   */\n      add\n        /* \"#utility.yul\":14526:14584   */\n      mstore\n        /* \"#utility.yul\":14409:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14963   */\n    tag_190:\n        /* \"#utility.yul\":14739:14742   */\n      0x00\n        /* \"#utility.yul\":14760:14827   */\n      tag_330\n        /* \"#utility.yul\":14824:14826   */\n      0x20\n        /* \"#utility.yul\":14819:14822   */\n      dup4\n        /* \"#utility.yul\":14760:14827   */\n      tag_174\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":14753:14827   */\n      swap2\n      pop\n        /* \"#utility.yul\":14836:14929   */\n      tag_331\n        /* \"#utility.yul\":14925:14928   */\n      dup3\n        /* \"#utility.yul\":14836:14929   */\n      tag_189\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14954:14956   */\n      0x20\n        /* \"#utility.yul\":14949:14952   */\n      dup3\n        /* \"#utility.yul\":14945:14957   */\n      add\n        /* \"#utility.yul\":14938:14957   */\n      swap1\n      pop\n        /* \"#utility.yul\":14597:14963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14969:15388   */\n    tag_139:\n        /* \"#utility.yul\":15135:15139   */\n      0x00\n        /* \"#utility.yul\":15173:15175   */\n      0x20\n        /* \"#utility.yul\":15162:15171   */\n      dup3\n        /* \"#utility.yul\":15158:15176   */\n      add\n        /* \"#utility.yul\":15150:15176   */\n      swap1\n      pop\n        /* \"#utility.yul\":15222:15231   */\n      dup2\n        /* \"#utility.yul\":15216:15220   */\n      dup2\n        /* \"#utility.yul\":15212:15232   */\n      sub\n        /* \"#utility.yul\":15208:15209   */\n      0x00\n        /* \"#utility.yul\":15197:15206   */\n      dup4\n        /* \"#utility.yul\":15193:15210   */\n      add\n        /* \"#utility.yul\":15186:15233   */\n      mstore\n        /* \"#utility.yul\":15250:15381   */\n      tag_333\n        /* \"#utility.yul\":15376:15380   */\n      dup2\n        /* \"#utility.yul\":15250:15381   */\n      tag_190\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":15242:15381   */\n      swap1\n      pop\n        /* \"#utility.yul\":14969:15388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122050561b4eb0e64f94b691565459ef6d4928ea524390829990b3f61a8b6c0d1c9764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_282": {
									"entryPoint": null,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_383": {
									"entryPoint": 133,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_370": {
									"entryPoint": 140,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061002c61002161008560201b60201c565b61008c60201b60201c565b735cbb0dfcede94dbacbdd65f2a39dddd2497de86e60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014d565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113398061015a5f395ff3fe6080604052600436106100aa575f3560e01c8063a9414dd811610063578063a9414dd8146101fb578063b88a802f14610225578063d936547e1461023b578063e43252d714610277578063f2fde38b1461029f578063fc239ffd146102c7576100ff565b80634c2b944b14610101578063715018a61461012b57806373b2e80e14610141578063741bef1a1461017d5780638da5cb5b146101a7578063a523f2c7146101d1576100ff565b366100ff573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100f59190610bcf565b60405180910390a2005b005b34801561010c575f80fd5b506101156102f1565b6040516101229190610bcf565b60405180910390f35b348015610136575f80fd5b5061013f6103e7565b005b34801561014c575f80fd5b5061016760048036038101906101629190610c46565b6103fa565b6040516101749190610c8b565b60405180910390f35b348015610188575f80fd5b50610191610417565b60405161019e9190610cff565b60405180910390f35b3480156101b2575f80fd5b506101bb61043c565b6040516101c89190610d27565b60405180910390f35b3480156101dc575f80fd5b506101e5610463565b6040516101f29190610df7565b60405180910390f35b348015610206575f80fd5b5061020f6104ee565b60405161021c9190610bcf565b60405180910390f35b348015610230575f80fd5b506102396104f5565b005b348015610246575f80fd5b50610261600480360381019061025c9190610c46565b610740565b60405161026e9190610c8b565b60405180910390f35b348015610282575f80fd5b5061029d60048036038101906102989190610c46565b61075d565b005b3480156102aa575f80fd5b506102c560048036038101906102c09190610c46565b6108ea565b005b3480156102d2575f80fd5b506102db61096c565b6040516102e89190610bcf565b60405180910390f35b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561035d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103819190610eb3565b5050509150505f81136103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090610f84565b60405180910390fd5b806b019d971e4fe8401e740000006103e19190610ffc565b91505090565b6103ef610a71565b6103f85f610aef565b565b6003602052805f5260405f205f915054906101000a900460ff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054806020026020016040519081016040528092919081815260200182805480156104e457602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161049b575b5050505050905090565b5f47905090565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611076565b60405180910390fd5b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906110de565b60405180910390fd5b5f6106116102f1565b905080471015610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90611146565b60405180910390fd5b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106ee573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516107359190610bcf565b60405180910390a250565b6002602052805f5260405f205f915054906101000a900460ff1681565b610765610a71565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e6906111ae565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600481908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d60405160405180910390a250565b6108f2610a71565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109579061123c565b60405180910390fd5b61096981610aef565b50565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc9190610eb3565b5050509150505f8113610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90610f84565b60405180910390fd5b5f4790506a52b7d2dcc80cd2e40000008282610a60919061125a565b610a6a9190610ffc565b9250505090565b610a79610bb0565b73ffffffffffffffffffffffffffffffffffffffff16610a9761043c565b73ffffffffffffffffffffffffffffffffffffffff1614610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae4906112e5565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b610bc981610bb7565b82525050565b5f602082019050610be25f830184610bc0565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1582610bec565b9050919050565b610c2581610c0b565b8114610c2f575f80fd5b50565b5f81359050610c4081610c1c565b92915050565b5f60208284031215610c5b57610c5a610be8565b5b5f610c6884828501610c32565b91505092915050565b5f8115159050919050565b610c8581610c71565b82525050565b5f602082019050610c9e5f830184610c7c565b92915050565b5f819050919050565b5f610cc7610cc2610cbd84610bec565b610ca4565b610bec565b9050919050565b5f610cd882610cad565b9050919050565b5f610ce982610cce565b9050919050565b610cf981610cdf565b82525050565b5f602082019050610d125f830184610cf0565b92915050565b610d2181610c0b565b82525050565b5f602082019050610d3a5f830184610d18565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610d7281610c0b565b82525050565b5f610d838383610d69565b60208301905092915050565b5f602082019050919050565b5f610da582610d40565b610daf8185610d4a565b9350610dba83610d5a565b805f5b83811015610dea578151610dd18882610d78565b9750610ddc83610d8f565b925050600181019050610dbd565b5085935050505092915050565b5f6020820190508181035f830152610e0f8184610d9b565b905092915050565b5f69ffffffffffffffffffff82169050919050565b610e3581610e17565b8114610e3f575f80fd5b50565b5f81519050610e5081610e2c565b92915050565b5f819050919050565b610e6881610e56565b8114610e72575f80fd5b50565b5f81519050610e8381610e5f565b92915050565b610e9281610bb7565b8114610e9c575f80fd5b50565b5f81519050610ead81610e89565b92915050565b5f805f805f60a08688031215610ecc57610ecb610be8565b5b5f610ed988828901610e42565b9550506020610eea88828901610e75565b9450506040610efb88828901610e9f565b9350506060610f0c88828901610e9f565b9250506080610f1d88828901610e42565b9150509295509295909350565b5f82825260208201905092915050565b7f496e76616c6964207072696365206461746100000000000000000000000000005f82015250565b5f610f6e601283610f2a565b9150610f7982610f3a565b602082019050919050565b5f6020820190508181035f830152610f9b81610f62565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61100682610bb7565b915061101183610bb7565b92508261102157611020610fa2565b5b828204905092915050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611060600f83610f2a565b915061106b8261102c565b602082019050919050565b5f6020820190508181035f83015261108d81611054565b9050919050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f6110c8600f83610f2a565b91506110d382611094565b602082019050919050565b5f6020820190508181035f8301526110f5816110bc565b9050919050565b7f4e6f7420656e6f7567682066756e6473000000000000000000000000000000005f82015250565b5f611130601083610f2a565b915061113b826110fc565b602082019050919050565b5f6020820190508181035f83015261115d81611124565b9050919050565b7f416c72656164792077686974656c6973746564000000000000000000000000005f82015250565b5f611198601383610f2a565b91506111a382611164565b602082019050919050565b5f6020820190508181035f8301526111c58161118c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611226602683610f2a565b9150611231826111cc565b604082019050919050565b5f6020820190508181035f8301526112538161121a565b9050919050565b5f61126482610bb7565b915061126f83610bb7565b925082820261127d81610bb7565b9150828204841483151761129457611293610fcf565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6112cf602083610f2a565b91506112da8261129b565b602082019050919050565b5f6020820190508181035f8301526112fc816112c3565b905091905056fea264697066735822122050561b4eb0e64f94b691565459ef6d4928ea524390829990b3f61a8b6c0d1c9764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x85 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x5CBB0DFCEDE94DBACBDD65F2A39DDDD2497DE86E PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x14D JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1339 DUP1 PUSH2 0x15A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9414DD8 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9414DD8 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xFC239FFD EQ PUSH2 0x2C7 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x4C2B944B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xA523F2C7 EQ PUSH2 0x1D1 JUMPI PUSH2 0xFF JUMP JUMPDEST CALLDATASIZE PUSH2 0xFF JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x4F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0x19D971E4FE8401E74000000 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x3F8 PUSH0 PUSH2 0xAEF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x49B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x611 PUSH2 0x2F1 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x765 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F783C179409B4127238BC9C990BC99B9A651666A0D20B51D6C42849EB88466D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0xA71 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x969 DUP2 PUSH2 0xAEF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 DUP3 PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA79 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA97 PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC9 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP2 EQ PUSH2 0xC2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC40 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH2 0xC5A PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC68 DUP5 DUP3 DUP6 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC85 DUP2 PUSH2 0xC71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC9E PUSH0 DUP4 ADD DUP5 PUSH2 0xC7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC7 PUSH2 0xCC2 PUSH2 0xCBD DUP5 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 DUP3 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCE9 DUP3 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF9 DUP2 PUSH2 0xCDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD12 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3A PUSH0 DUP4 ADD DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD83 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA5 DUP3 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0xDAF DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xDBA DUP4 PUSH2 0xD5A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDEA JUMPI DUP2 MLOAD PUSH2 0xDD1 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDDC DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDBD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE0F DUP2 DUP5 PUSH2 0xD9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE35 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP2 EQ PUSH2 0xE3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE50 DUP2 PUSH2 0xE2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xE56 JUMP JUMPDEST DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE83 DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEAD DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED9 DUP9 DUP3 DUP10 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xEEA DUP9 DUP3 DUP10 ADD PUSH2 0xE75 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xF0C DUP9 DUP3 DUP10 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xF1D DUP9 DUP3 DUP10 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174610000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF6E PUSH1 0x12 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0xF79 DUP3 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9B DUP2 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1006 DUP3 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1011 DUP4 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1021 JUMPI PUSH2 0x1020 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1060 PUSH1 0xF DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP3 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x108D DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C8 PUSH1 0xF DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x10D3 DUP3 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682066756E647300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1130 PUSH1 0x10 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x113B DUP3 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115D DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1198 PUSH1 0x13 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C5 DUP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1226 PUSH1 0x26 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x1231 DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1253 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1264 DUP3 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x126F DUP4 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x127D DUP2 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1294 JUMPI PUSH2 0x1293 PUSH2 0xFCF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CF PUSH1 0x20 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x12DA DUP3 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12FC DUP2 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP JUMP SHL 0x4E 0xB0 0xE6 0x4F SWAP5 0xB6 SWAP2 JUMP SLOAD MSIZE 0xEF PUSH14 0x4928EA524390829990B3F61A8B6C 0xD SHR SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "351:2285:0:-:0;;;755:108;;;;;;;;;;936:32:1;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;813:42:0;779:9;;:77;;;;;;;;;;;;;;;;;;351:2285;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:1:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;351:2285:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_253": {
									"entryPoint": null,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_257": {
									"entryPoint": null,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_313": {
									"entryPoint": 2673,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_383": {
									"entryPoint": 2992,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_370": {
									"entryPoint": 2799,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhitelist_121": {
									"entryPoint": 1885,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_189": {
									"entryPoint": 1269,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractNativeBalance_202": {
									"entryPoint": 1262,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractUsdBalance_242": {
									"entryPoint": 2412,
									"id": 242,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEligibleAddresses_130": {
									"entryPoint": 1123,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardAmountInTMetis_89": {
									"entryPoint": 753,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasClaimed_29": {
									"entryPoint": 1018,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_299": {
									"entryPoint": 1084,
									"id": 299,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_21": {
									"entryPoint": 1047,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_327": {
									"entryPoint": 999,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_350": {
									"entryPoint": 2282,
									"id": 350,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelisted_25": {
									"entryPoint": 1856,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$16_to_t_address_fromStack": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$16__to_t_address__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$16_to_t_address": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15391:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:3",
														"type": ""
													}
												],
												"src": "442:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:3",
														"type": ""
													}
												],
												"src": "769:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:3",
														"type": ""
													}
												],
												"src": "901:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:3"
															},
															"nodeType": "YulIf",
															"src": "1056:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:3",
														"type": ""
													}
												],
												"src": "1003:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:3",
														"type": ""
													}
												],
												"src": "1131:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:32:3"
															},
															"nodeType": "YulIf",
															"src": "1352:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1481:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1312:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1323:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1335:6:3",
														"type": ""
													}
												],
												"src": "1276:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:3",
														"type": ""
													}
												],
												"src": "1611:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1766:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1783:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1803:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1788:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1776:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1754:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1761:3:3",
														"type": ""
													}
												],
												"src": "1707:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1924:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1886:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1898:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1909:4:3",
														"type": ""
													}
												],
												"src": "1822:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2070:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2080:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2087:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2080:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2056:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2066:3:3",
														"type": ""
													}
												],
												"src": "2038:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2164:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2174:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2232:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2214:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2214:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2205:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2205:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2187:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2174:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2154:9:3",
														"type": ""
													}
												],
												"src": "2104:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2312:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2322:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2366:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2335:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2322:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2302:9:3",
														"type": ""
													}
												],
												"src": "2252:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2472:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2482:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2526:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2495:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2482:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$16_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2452:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2462:9:3",
														"type": ""
													}
												],
												"src": "2384:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2637:94:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2654:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2718:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$16_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2659:58:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:65:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:78:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2647:78:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$16_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2625:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2632:3:3",
														"type": ""
													}
												],
												"src": "2544:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:152:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2873:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2885:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2881:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2873:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2981:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3005:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2990:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$16_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2909:71:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2909:99:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2909:99:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$16__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2835:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2847:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2858:4:3",
														"type": ""
													}
												],
												"src": "2737:278:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3086:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3103:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3126:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3108:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3096:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3074:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3081:3:3",
														"type": ""
													}
												],
												"src": "3021:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3253:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3333:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3357:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3289:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3289:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3289:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3215:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3227:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3238:4:3",
														"type": ""
													}
												],
												"src": "3145:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3447:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3458:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3474:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3468:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3430:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3440:6:3",
														"type": ""
													}
												],
												"src": "3373:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3604:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3621:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3626:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3661:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3657:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3642:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3576:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3581:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3592:11:3",
														"type": ""
													}
												],
												"src": "3493:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3765:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3773:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3765:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3786:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3786:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3742:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3750:4:3",
														"type": ""
													}
												],
												"src": "3683:132:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3876:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3916:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3898:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3886:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3864:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3871:3:3",
														"type": ""
													}
												],
												"src": "3821:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4015:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4059:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4067:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4025:33:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4025:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4080:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4103:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4094:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4080:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3988:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3996:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "4004:10:3",
														"type": ""
													}
												],
												"src": "3935:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4195:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4205:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4217:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4222:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4182:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4190:4:3",
														"type": ""
													}
												],
												"src": "4120:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4393:608:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4403:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4465:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4417:47:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:54:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4407:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4480:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4561:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4487:73:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:86:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4647:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4597:49:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:56:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4586:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4662:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4676:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4666:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4752:224:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4766:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4793:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4787:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4770:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4813:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4864:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4879:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4820:43:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4820:63:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4813:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4896:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4959:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4906:52:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4906:60:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4896:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4714:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4717:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4711:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4725:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4727:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4736:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4739:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4732:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4732:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4727:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4696:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4698:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4707:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4702:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4692:284:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4992:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4372:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4379:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4388:3:3",
														"type": ""
													}
												],
												"src": "4269:732:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5155:225:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5165:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5177:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5188:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5173:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5165:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5212:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5208:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5208:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5231:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5237:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5227:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5257:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5359:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5368:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5265:93:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5265:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5257:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5127:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5139:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5150:4:3",
														"type": ""
													}
												],
												"src": "5007:373:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5430:61:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5440:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5455:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5462:22:3",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:34:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5440:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5412:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5422:7:3",
														"type": ""
													}
												],
												"src": "5386:105:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5595:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5604:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5607:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5597:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5597:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5597:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5562:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5586:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "5569:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5569:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5559:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5559:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5552:42:3"
															},
															"nodeType": "YulIf",
															"src": "5549:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5532:5:3",
														"type": ""
													}
												],
												"src": "5497:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5685:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5695:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5710:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5704:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5695:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5752:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "5726:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5663:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5671:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5679:5:3",
														"type": ""
													}
												],
												"src": "5623:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5814:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5824:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5835:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5824:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5796:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5806:7:3",
														"type": ""
													}
												],
												"src": "5770:76:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5894:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5950:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5959:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5962:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5952:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5952:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5952:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5917:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5941:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "5924:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5924:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5914:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5907:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:42:3"
															},
															"nodeType": "YulIf",
															"src": "5904:62:3"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5887:5:3",
														"type": ""
													}
												],
												"src": "5852:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6040:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6050:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6065:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6059:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6050:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6107:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "6081:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6081:32:3"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6018:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6026:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6034:5:3",
														"type": ""
													}
												],
												"src": "5978:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6168:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6225:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6234:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6237:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6227:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6227:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6227:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6191:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6216:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6198:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6198:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6188:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6188:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:43:3"
															},
															"nodeType": "YulIf",
															"src": "6178:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6161:5:3",
														"type": ""
													}
												],
												"src": "6125:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6316:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6326:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6341:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6335:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6326:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6384:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6357:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6294:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6302:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6310:5:3",
														"type": ""
													}
												],
												"src": "6253:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6544:829:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6591:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6593:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6593:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6593:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6561:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6561:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6586:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:33:3"
															},
															"nodeType": "YulIf",
															"src": "6554:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6684:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6699:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6713:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6703:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6728:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6773:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6784:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6769:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6769:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6793:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6738:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6738:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6728:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6821:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6836:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6850:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6840:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6866:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6911:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6922:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6907:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6907:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6931:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6876:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6876:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6866:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6959:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6974:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6978:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7004:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7050:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7061:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7046:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7046:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7070:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7014:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7014:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7004:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7098:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7113:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7127:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7117:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7143:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7189:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7200:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7185:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7185:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7209:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7153:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7143:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7237:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7252:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7266:3:3",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7256:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7283:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7328:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7339:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7324:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7324:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7348:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7293:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7293:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7283:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6482:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6493:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6505:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6513:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6521:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6529:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6537:6:3",
														"type": ""
													}
												],
												"src": "6402:971:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7475:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7492:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7485:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7485:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7532:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7537:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7513:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7447:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7452:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7463:11:3",
														"type": ""
													}
												],
												"src": "7379:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7660:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7682:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7690:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7678:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7678:14:3"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652064617461",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7694:20:3",
																		"type": "",
																		"value": "Invalid price data"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7671:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7671:44:3"
														}
													]
												},
												"name": "store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7652:6:3",
														"type": ""
													}
												],
												"src": "7554:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7874:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7884:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7950:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:2:3",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7891:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8056:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																	"nodeType": "YulIdentifier",
																	"src": "7967:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7967:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7967:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8069:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8080:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8069:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7862:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7870:3:3",
														"type": ""
													}
												],
												"src": "7728:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8271:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8281:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8293:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8304:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8289:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8281:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8328:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8339:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8324:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8324:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8347:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8353:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8317:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8373:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8507:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8381:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8373:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8251:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8266:4:3",
														"type": ""
													}
												],
												"src": "8100:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8553:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8570:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8573:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8667:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8670:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8660:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8660:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8691:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8694:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8684:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8684:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8525:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8739:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8756:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8759:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8749:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8749:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8749:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8853:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8856:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8846:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8846:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8846:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8880:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8870:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8711:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8939:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8949:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8972:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8954:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8954:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8949:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8983:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9006:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8988:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8983:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9030:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9032:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9032:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9032:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9027:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:9:3"
															},
															"nodeType": "YulIf",
															"src": "9017:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9062:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9071:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9074:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9067:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9062:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8928:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8931:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8937:1:3",
														"type": ""
													}
												],
												"src": "8897:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9194:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9216:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9212:14:3"
																	},
																	{
																		"hexValue": "4e6f742077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9228:17:3",
																		"type": "",
																		"value": "Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9205:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9186:6:3",
														"type": ""
													}
												],
												"src": "9088:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9405:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9415:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9481:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9486:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9422:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9415:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9587:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																	"nodeType": "YulIdentifier",
																	"src": "9498:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9498:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9498:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9600:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9611:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9616:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9393:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9401:3:3",
														"type": ""
													}
												],
												"src": "9259:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9802:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9812:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9824:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9835:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9812:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9859:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9855:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9878:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9874:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9874:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9848:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9904:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10038:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9912:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9912:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9904:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9782:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9797:4:3",
														"type": ""
													}
												],
												"src": "9631:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10162:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10184:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10192:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10180:14:3"
																	},
																	{
																		"hexValue": "416c726561647920636c61696d6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10196:17:3",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10173:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10173:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10154:6:3",
														"type": ""
													}
												],
												"src": "10056:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10373:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10383:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10449:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10454:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10390:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10390:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10555:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																	"nodeType": "YulIdentifier",
																	"src": "10466:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10466:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10568:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10579:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10584:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10575:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10568:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10361:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10369:3:3",
														"type": ""
													}
												],
												"src": "10227:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10770:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10780:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10792:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10803:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10788:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10780:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10827:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10838:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10823:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10823:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10846:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10852:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10842:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10842:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10816:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10816:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10816:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10872:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11006:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10880:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10872:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10750:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10765:4:3",
														"type": ""
													}
												],
												"src": "10599:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11130:60:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11152:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11160:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11148:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11148:14:3"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682066756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11164:18:3",
																		"type": "",
																		"value": "Not enough funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11141:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11141:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11141:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11122:6:3",
														"type": ""
													}
												],
												"src": "11024:166:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11342:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11352:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11418:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11423:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11359:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11359:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11352:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11524:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																	"nodeType": "YulIdentifier",
																	"src": "11435:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11435:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11537:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11548:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11544:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11544:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11537:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11330:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11338:3:3",
														"type": ""
													}
												],
												"src": "11196:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11739:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11749:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11761:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11772:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11757:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11757:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11749:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11796:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11807:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11792:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11792:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11815:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11821:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11811:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11811:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11785:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11785:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11785:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11841:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11975:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11849:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11841:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11719:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11734:4:3",
														"type": ""
													}
												],
												"src": "11568:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12099:63:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12121:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12129:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12117:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12117:14:3"
																	},
																	{
																		"hexValue": "416c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12133:21:3",
																		"type": "",
																		"value": "Already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12110:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12110:45:3"
														}
													]
												},
												"name": "store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12091:6:3",
														"type": ""
													}
												],
												"src": "11993:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12314:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12324:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12390:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12395:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12331:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12331:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12324:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12496:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																	"nodeType": "YulIdentifier",
																	"src": "12407:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12407:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12509:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12520:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12525:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12509:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12302:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12310:3:3",
														"type": ""
													}
												],
												"src": "12168:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12721:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12733:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12744:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12729:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12721:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12768:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12779:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12787:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12793:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12783:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12783:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12757:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12813:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12947:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12821:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12691:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12706:4:3",
														"type": ""
													}
												],
												"src": "12540:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13071:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13093:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13101:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13089:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13089:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13105:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13082:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13082:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13082:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13161:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13169:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13157:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13157:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13174:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13150:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13150:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13150:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13063:6:3",
														"type": ""
													}
												],
												"src": "12965:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13342:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13352:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13418:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13423:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13359:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13359:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13352:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13524:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13435:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13537:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13548:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13553:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13544:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13544:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13537:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13330:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13338:3:3",
														"type": ""
													}
												],
												"src": "13196:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13739:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13749:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13761:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13772:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13757:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13749:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13796:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13807:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13792:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13792:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13815:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13821:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13811:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13811:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13785:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13785:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13841:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13975:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13849:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13849:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13841:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13719:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13734:4:3",
														"type": ""
													}
												],
												"src": "13568:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14041:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14051:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14074:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14056:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14056:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14051:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14085:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14108:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14090:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14090:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14085:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14119:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14142:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14145:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14138:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14138:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "14123:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14156:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "14185:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14167:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14167:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14156:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14374:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14376:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14376:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14376:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14307:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14300:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14300:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14330:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "14337:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "14346:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "14333:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14333:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "14327:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14327:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14280:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14280:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14260:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14260:113:3"
															},
															"nodeType": "YulIf",
															"src": "14257:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14024:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14027:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14033:7:3",
														"type": ""
													}
												],
												"src": "13993:410:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14537:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14545:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14533:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14549:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14526:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14526:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14526:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14507:6:3",
														"type": ""
													}
												],
												"src": "14409:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14743:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14753:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14819:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14824:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14760:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14760:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14753:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14925:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "14836:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14836:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14836:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14938:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14949:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14954:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14945:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14938:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14731:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14739:3:3",
														"type": ""
													}
												],
												"src": "14597:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15140:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15150:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15162:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15173:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15158:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15158:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15150:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15197:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15208:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15193:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15216:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15222:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15212:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15186:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15242:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15376:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15250:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15242:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15120:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15135:4:3",
														"type": ""
													}
												],
												"src": "14969:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$16_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$16_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$16_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$16__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$16_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price data\")\n\n    }\n\n    function abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100aa575f3560e01c8063a9414dd811610063578063a9414dd8146101fb578063b88a802f14610225578063d936547e1461023b578063e43252d714610277578063f2fde38b1461029f578063fc239ffd146102c7576100ff565b80634c2b944b14610101578063715018a61461012b57806373b2e80e14610141578063741bef1a1461017d5780638da5cb5b146101a7578063a523f2c7146101d1576100ff565b366100ff573373ffffffffffffffffffffffffffffffffffffffff167f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874346040516100f59190610bcf565b60405180910390a2005b005b34801561010c575f80fd5b506101156102f1565b6040516101229190610bcf565b60405180910390f35b348015610136575f80fd5b5061013f6103e7565b005b34801561014c575f80fd5b5061016760048036038101906101629190610c46565b6103fa565b6040516101749190610c8b565b60405180910390f35b348015610188575f80fd5b50610191610417565b60405161019e9190610cff565b60405180910390f35b3480156101b2575f80fd5b506101bb61043c565b6040516101c89190610d27565b60405180910390f35b3480156101dc575f80fd5b506101e5610463565b6040516101f29190610df7565b60405180910390f35b348015610206575f80fd5b5061020f6104ee565b60405161021c9190610bcf565b60405180910390f35b348015610230575f80fd5b506102396104f5565b005b348015610246575f80fd5b50610261600480360381019061025c9190610c46565b610740565b60405161026e9190610c8b565b60405180910390f35b348015610282575f80fd5b5061029d60048036038101906102989190610c46565b61075d565b005b3480156102aa575f80fd5b506102c560048036038101906102c09190610c46565b6108ea565b005b3480156102d2575f80fd5b506102db61096c565b6040516102e89190610bcf565b60405180910390f35b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561035d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103819190610eb3565b5050509150505f81136103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090610f84565b60405180910390fd5b806b019d971e4fe8401e740000006103e19190610ffc565b91505090565b6103ef610a71565b6103f85f610aef565b565b6003602052805f5260405f205f915054906101000a900460ff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054806020026020016040519081016040528092919081815260200182805480156104e457602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161049b575b5050505050905090565b5f47905090565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611076565b60405180910390fd5b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff906110de565b60405180910390fd5b5f6106116102f1565b905080471015610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90611146565b60405180910390fd5b600160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156106ee573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516107359190610bcf565b60405180910390a250565b6002602052805f5260405f205f915054906101000a900460ff1681565b610765610a71565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e6906111ae565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600481908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d60405160405180910390a250565b6108f2610a71565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610960576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109579061123c565b60405180910390fd5b61096981610aef565b50565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc9190610eb3565b5050509150505f8113610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90610f84565b60405180910390fd5b5f4790506a52b7d2dcc80cd2e40000008282610a60919061125a565b610a6a9190610ffc565b9250505090565b610a79610bb0565b73ffffffffffffffffffffffffffffffffffffffff16610a9761043c565b73ffffffffffffffffffffffffffffffffffffffff1614610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae4906112e5565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b610bc981610bb7565b82525050565b5f602082019050610be25f830184610bc0565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1582610bec565b9050919050565b610c2581610c0b565b8114610c2f575f80fd5b50565b5f81359050610c4081610c1c565b92915050565b5f60208284031215610c5b57610c5a610be8565b5b5f610c6884828501610c32565b91505092915050565b5f8115159050919050565b610c8581610c71565b82525050565b5f602082019050610c9e5f830184610c7c565b92915050565b5f819050919050565b5f610cc7610cc2610cbd84610bec565b610ca4565b610bec565b9050919050565b5f610cd882610cad565b9050919050565b5f610ce982610cce565b9050919050565b610cf981610cdf565b82525050565b5f602082019050610d125f830184610cf0565b92915050565b610d2181610c0b565b82525050565b5f602082019050610d3a5f830184610d18565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b610d7281610c0b565b82525050565b5f610d838383610d69565b60208301905092915050565b5f602082019050919050565b5f610da582610d40565b610daf8185610d4a565b9350610dba83610d5a565b805f5b83811015610dea578151610dd18882610d78565b9750610ddc83610d8f565b925050600181019050610dbd565b5085935050505092915050565b5f6020820190508181035f830152610e0f8184610d9b565b905092915050565b5f69ffffffffffffffffffff82169050919050565b610e3581610e17565b8114610e3f575f80fd5b50565b5f81519050610e5081610e2c565b92915050565b5f819050919050565b610e6881610e56565b8114610e72575f80fd5b50565b5f81519050610e8381610e5f565b92915050565b610e9281610bb7565b8114610e9c575f80fd5b50565b5f81519050610ead81610e89565b92915050565b5f805f805f60a08688031215610ecc57610ecb610be8565b5b5f610ed988828901610e42565b9550506020610eea88828901610e75565b9450506040610efb88828901610e9f565b9350506060610f0c88828901610e9f565b9250506080610f1d88828901610e42565b9150509295509295909350565b5f82825260208201905092915050565b7f496e76616c6964207072696365206461746100000000000000000000000000005f82015250565b5f610f6e601283610f2a565b9150610f7982610f3a565b602082019050919050565b5f6020820190508181035f830152610f9b81610f62565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61100682610bb7565b915061101183610bb7565b92508261102157611020610fa2565b5b828204905092915050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611060600f83610f2a565b915061106b8261102c565b602082019050919050565b5f6020820190508181035f83015261108d81611054565b9050919050565b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f6110c8600f83610f2a565b91506110d382611094565b602082019050919050565b5f6020820190508181035f8301526110f5816110bc565b9050919050565b7f4e6f7420656e6f7567682066756e6473000000000000000000000000000000005f82015250565b5f611130601083610f2a565b915061113b826110fc565b602082019050919050565b5f6020820190508181035f83015261115d81611124565b9050919050565b7f416c72656164792077686974656c6973746564000000000000000000000000005f82015250565b5f611198601383610f2a565b91506111a382611164565b602082019050919050565b5f6020820190508181035f8301526111c58161118c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611226602683610f2a565b9150611231826111cc565b604082019050919050565b5f6020820190508181035f8301526112538161121a565b9050919050565b5f61126482610bb7565b915061126f83610bb7565b925082820261127d81610bb7565b9150828204841483151761129457611293610fcf565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6112cf602083610f2a565b91506112da8261129b565b602082019050919050565b5f6020820190508181035f8301526112fc816112c3565b905091905056fea264697066735822122050561b4eb0e64f94b691565459ef6d4928ea524390829990b3f61a8b6c0d1c9764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9414DD8 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA9414DD8 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xFC239FFD EQ PUSH2 0x2C7 JUMPI PUSH2 0xFF JUMP JUMPDEST DUP1 PUSH4 0x4C2B944B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xA523F2C7 EQ PUSH2 0x1D1 JUMPI PUSH2 0xFF JUMP JUMPDEST CALLDATASIZE PUSH2 0xFF JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20F PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x239 PUSH2 0x4F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x3C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C0 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0x19D971E4FE8401E74000000 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x3F8 PUSH0 PUSH2 0xAEF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x49B JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1076 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x611 PUSH2 0x2F1 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x765 PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4F783C179409B4127238BC9C990BC99B9A651666A0D20B51D6C42849EB88466D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0xA71 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x969 DUP2 PUSH2 0xAEF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 DUP3 PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0xFFC JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xA79 PUSH2 0xBB0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA97 PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC9 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC25 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP2 EQ PUSH2 0xC2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC40 DUP2 PUSH2 0xC1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH2 0xC5A PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC68 DUP5 DUP3 DUP6 ADD PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC85 DUP2 PUSH2 0xC71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC9E PUSH0 DUP4 ADD DUP5 PUSH2 0xC7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC7 PUSH2 0xCC2 PUSH2 0xCBD DUP5 PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 DUP3 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCE9 DUP3 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF9 DUP2 PUSH2 0xCDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD12 PUSH0 DUP4 ADD DUP5 PUSH2 0xCF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3A PUSH0 DUP4 ADD DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD72 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD83 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDA5 DUP3 PUSH2 0xD40 JUMP JUMPDEST PUSH2 0xDAF DUP2 DUP6 PUSH2 0xD4A JUMP JUMPDEST SWAP4 POP PUSH2 0xDBA DUP4 PUSH2 0xD5A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDEA JUMPI DUP2 MLOAD PUSH2 0xDD1 DUP9 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP8 POP PUSH2 0xDDC DUP4 PUSH2 0xD8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDBD JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE0F DUP2 DUP5 PUSH2 0xD9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE35 DUP2 PUSH2 0xE17 JUMP JUMPDEST DUP2 EQ PUSH2 0xE3F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE50 DUP2 PUSH2 0xE2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE68 DUP2 PUSH2 0xE56 JUMP JUMPDEST DUP2 EQ PUSH2 0xE72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE83 DUP2 PUSH2 0xE5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xBB7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xEAD DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xBE8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED9 DUP9 DUP3 DUP10 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xEEA DUP9 DUP3 DUP10 ADD PUSH2 0xE75 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xEFB DUP9 DUP3 DUP10 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xF0C DUP9 DUP3 DUP10 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xF1D DUP9 DUP3 DUP10 ADD PUSH2 0xE42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174610000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF6E PUSH1 0x12 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0xF79 DUP3 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF9B DUP2 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1006 DUP3 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1011 DUP4 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1021 JUMPI PUSH2 0x1020 PUSH2 0xFA2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1060 PUSH1 0xF DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP3 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x108D DUP2 PUSH2 0x1054 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C8 PUSH1 0xF DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x10D3 DUP3 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F5 DUP2 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682066756E647300000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1130 PUSH1 0x10 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x113B DUP3 PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x115D DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1198 PUSH1 0x13 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x11A3 DUP3 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11C5 DUP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1226 PUSH1 0x26 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x1231 DUP3 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1253 DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1264 DUP3 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x126F DUP4 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x127D DUP2 PUSH2 0xBB7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1294 JUMPI PUSH2 0x1293 PUSH2 0xFCF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12CF PUSH1 0x20 DUP4 PUSH2 0xF2A JUMP JUMPDEST SWAP2 POP PUSH2 0x12DA DUP3 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12FC DUP2 PUSH2 0x12C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP JUMP SHL 0x4E 0xB0 0xE6 0x4F SWAP5 0xB6 SWAP2 JUMP SLOAD MSIZE 0xEF PUSH14 0x4928EA524390829990B3F61A8B6C 0xD SHR SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "351:2285:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:10;2560:31;;;2581:9;2560:31;;;;;;:::i;:::-;;;;;;;;351:2285;;;869:249;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;:::-;;491:42:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;397:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1365:114:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1989:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1485:442;;;;;;;;;;;;;:::i;:::-;;442:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1124:235;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2172:340:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;869:249;925:7;947:12;969:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;944:52;;;;;;1022:1;1014:5;:9;1006:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1090:5;1064:14;1063:33;;;;:::i;:::-;1056:40;;;869:249;:::o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;491:42:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;397:38::-;;;;;;;;;;;;;:::o;1201:85:1:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1365:114:0:-;1420:16;1455:17;1448:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:114;:::o;1989:111::-;2046:7;2072:21;2065:28;;1989:111;:::o;1485:442::-;1535:11;:23;1547:10;1535:23;;;;;;;;;;;;;;;;;;;;;;;;;1527:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:10;:22;1608:10;1597:22;;;;;;;;;;;;;;;;;;;;;;;;;1596:23;1588:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1650:20;1673:25;:23;:25::i;:::-;1650:48;;1741:12;1716:21;:37;;1708:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1810:4;1785:10;:22;1796:10;1785:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1832:10;1824:28;;:42;1853:12;1824:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:10;1881:39;;;1907:12;1881:39;;;;;;:::i;:::-;;;;;;;;1517:410;1485:442::o;442:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;1124:235::-;1094:13:1;:11;:13::i;:::-;1200:11:0::1;:17;1212:4;1200:17;;;;;;;;;;;;;;;;;;;;;;;;;1199:18;1191:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1271:4;1251:11;:17;1263:4;1251:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1285:17;1308:4;1285:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:4;1328:24;;;;;;;;;;;;1124:235:::0;:::o;2081:198:1:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2172:340:0:-;2226:17;2258:12;2280:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2255:52;;;;;;2333:1;2325:5;:9;2317:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;2367:15;2385:21;2367:39;;2457:4;2447:5;2429:7;:24;;;;:::i;:::-;2428:33;;;;:::i;:::-;2416:45;;2245:267;;2172:340;:::o;1359:130:1:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:60::-;2066:3;2087:5;2080:12;;2038:60;;;:::o;2104:142::-;2154:9;2187:53;2205:34;2214:24;2232:5;2214:24;:::i;:::-;2205:34;:::i;:::-;2187:53;:::i;:::-;2174:66;;2104:142;;;:::o;2252:126::-;2302:9;2335:37;2366:5;2335:37;:::i;:::-;2322:50;;2252:126;;;:::o;2384:154::-;2462:9;2495:37;2526:5;2495:37;:::i;:::-;2482:50;;2384:154;;;:::o;2544:187::-;2659:65;2718:5;2659:65;:::i;:::-;2654:3;2647:78;2544:187;;:::o;2737:278::-;2858:4;2896:2;2885:9;2881:18;2873:26;;2909:99;3005:1;2994:9;2990:17;2981:6;2909:99;:::i;:::-;2737:278;;;;:::o;3021:118::-;3108:24;3126:5;3108:24;:::i;:::-;3103:3;3096:37;3021:118;;:::o;3145:222::-;3238:4;3276:2;3265:9;3261:18;3253:26;;3289:71;3357:1;3346:9;3342:17;3333:6;3289:71;:::i;:::-;3145:222;;;;:::o;3373:114::-;3440:6;3474:5;3468:12;3458:22;;3373:114;;;:::o;3493:184::-;3592:11;3626:6;3621:3;3614:19;3666:4;3661:3;3657:14;3642:29;;3493:184;;;;:::o;3683:132::-;3750:4;3773:3;3765:11;;3803:4;3798:3;3794:14;3786:22;;3683:132;;;:::o;3821:108::-;3898:24;3916:5;3898:24;:::i;:::-;3893:3;3886:37;3821:108;;:::o;3935:179::-;4004:10;4025:46;4067:3;4059:6;4025:46;:::i;:::-;4103:4;4098:3;4094:14;4080:28;;3935:179;;;;:::o;4120:113::-;4190:4;4222;4217:3;4213:14;4205:22;;4120:113;;;:::o;4269:732::-;4388:3;4417:54;4465:5;4417:54;:::i;:::-;4487:86;4566:6;4561:3;4487:86;:::i;:::-;4480:93;;4597:56;4647:5;4597:56;:::i;:::-;4676:7;4707:1;4692:284;4717:6;4714:1;4711:13;4692:284;;;4793:6;4787:13;4820:63;4879:3;4864:13;4820:63;:::i;:::-;4813:70;;4906:60;4959:6;4906:60;:::i;:::-;4896:70;;4752:224;4739:1;4736;4732:9;4727:14;;4692:284;;;4696:14;4992:3;4985:10;;4393:608;;;4269:732;;;;:::o;5007:373::-;5150:4;5188:2;5177:9;5173:18;5165:26;;5237:9;5231:4;5227:20;5223:1;5212:9;5208:17;5201:47;5265:108;5368:4;5359:6;5265:108;:::i;:::-;5257:116;;5007:373;;;;:::o;5386:105::-;5422:7;5462:22;5455:5;5451:34;5440:45;;5386:105;;;:::o;5497:120::-;5569:23;5586:5;5569:23;:::i;:::-;5562:5;5559:34;5549:62;;5607:1;5604;5597:12;5549:62;5497:120;:::o;5623:141::-;5679:5;5710:6;5704:13;5695:22;;5726:32;5752:5;5726:32;:::i;:::-;5623:141;;;;:::o;5770:76::-;5806:7;5835:5;5824:16;;5770:76;;;:::o;5852:120::-;5924:23;5941:5;5924:23;:::i;:::-;5917:5;5914:34;5904:62;;5962:1;5959;5952:12;5904:62;5852:120;:::o;5978:141::-;6034:5;6065:6;6059:13;6050:22;;6081:32;6107:5;6081:32;:::i;:::-;5978:141;;;;:::o;6125:122::-;6198:24;6216:5;6198:24;:::i;:::-;6191:5;6188:35;6178:63;;6237:1;6234;6227:12;6178:63;6125:122;:::o;6253:143::-;6310:5;6341:6;6335:13;6326:22;;6357:33;6384:5;6357:33;:::i;:::-;6253:143;;;;:::o;6402:971::-;6505:6;6513;6521;6529;6537;6586:3;6574:9;6565:7;6561:23;6557:33;6554:120;;;6593:79;;:::i;:::-;6554:120;6713:1;6738:63;6793:7;6784:6;6773:9;6769:22;6738:63;:::i;:::-;6728:73;;6684:127;6850:2;6876:63;6931:7;6922:6;6911:9;6907:22;6876:63;:::i;:::-;6866:73;;6821:128;6988:2;7014:64;7070:7;7061:6;7050:9;7046:22;7014:64;:::i;:::-;7004:74;;6959:129;7127:2;7153:64;7209:7;7200:6;7189:9;7185:22;7153:64;:::i;:::-;7143:74;;7098:129;7266:3;7293:63;7348:7;7339:6;7328:9;7324:22;7293:63;:::i;:::-;7283:73;;7237:129;6402:971;;;;;;;;:::o;7379:169::-;7463:11;7497:6;7492:3;7485:19;7537:4;7532:3;7528:14;7513:29;;7379:169;;;;:::o;7554:168::-;7694:20;7690:1;7682:6;7678:14;7671:44;7554:168;:::o;7728:366::-;7870:3;7891:67;7955:2;7950:3;7891:67;:::i;:::-;7884:74;;7967:93;8056:3;7967:93;:::i;:::-;8085:2;8080:3;8076:12;8069:19;;7728:366;;;:::o;8100:419::-;8266:4;8304:2;8293:9;8289:18;8281:26;;8353:9;8347:4;8343:20;8339:1;8328:9;8324:17;8317:47;8381:131;8507:4;8381:131;:::i;:::-;8373:139;;8100:419;;;:::o;8525:180::-;8573:77;8570:1;8563:88;8670:4;8667:1;8660:15;8694:4;8691:1;8684:15;8711:180;8759:77;8756:1;8749:88;8856:4;8853:1;8846:15;8880:4;8877:1;8870:15;8897:185;8937:1;8954:20;8972:1;8954:20;:::i;:::-;8949:25;;8988:20;9006:1;8988:20;:::i;:::-;8983:25;;9027:1;9017:35;;9032:18;;:::i;:::-;9017:35;9074:1;9071;9067:9;9062:14;;8897:185;;;;:::o;9088:165::-;9228:17;9224:1;9216:6;9212:14;9205:41;9088:165;:::o;9259:366::-;9401:3;9422:67;9486:2;9481:3;9422:67;:::i;:::-;9415:74;;9498:93;9587:3;9498:93;:::i;:::-;9616:2;9611:3;9607:12;9600:19;;9259:366;;;:::o;9631:419::-;9797:4;9835:2;9824:9;9820:18;9812:26;;9884:9;9878:4;9874:20;9870:1;9859:9;9855:17;9848:47;9912:131;10038:4;9912:131;:::i;:::-;9904:139;;9631:419;;;:::o;10056:165::-;10196:17;10192:1;10184:6;10180:14;10173:41;10056:165;:::o;10227:366::-;10369:3;10390:67;10454:2;10449:3;10390:67;:::i;:::-;10383:74;;10466:93;10555:3;10466:93;:::i;:::-;10584:2;10579:3;10575:12;10568:19;;10227:366;;;:::o;10599:419::-;10765:4;10803:2;10792:9;10788:18;10780:26;;10852:9;10846:4;10842:20;10838:1;10827:9;10823:17;10816:47;10880:131;11006:4;10880:131;:::i;:::-;10872:139;;10599:419;;;:::o;11024:166::-;11164:18;11160:1;11152:6;11148:14;11141:42;11024:166;:::o;11196:366::-;11338:3;11359:67;11423:2;11418:3;11359:67;:::i;:::-;11352:74;;11435:93;11524:3;11435:93;:::i;:::-;11553:2;11548:3;11544:12;11537:19;;11196:366;;;:::o;11568:419::-;11734:4;11772:2;11761:9;11757:18;11749:26;;11821:9;11815:4;11811:20;11807:1;11796:9;11792:17;11785:47;11849:131;11975:4;11849:131;:::i;:::-;11841:139;;11568:419;;;:::o;11993:169::-;12133:21;12129:1;12121:6;12117:14;12110:45;11993:169;:::o;12168:366::-;12310:3;12331:67;12395:2;12390:3;12331:67;:::i;:::-;12324:74;;12407:93;12496:3;12407:93;:::i;:::-;12525:2;12520:3;12516:12;12509:19;;12168:366;;;:::o;12540:419::-;12706:4;12744:2;12733:9;12729:18;12721:26;;12793:9;12787:4;12783:20;12779:1;12768:9;12764:17;12757:47;12821:131;12947:4;12821:131;:::i;:::-;12813:139;;12540:419;;;:::o;12965:225::-;13105:34;13101:1;13093:6;13089:14;13082:58;13174:8;13169:2;13161:6;13157:15;13150:33;12965:225;:::o;13196:366::-;13338:3;13359:67;13423:2;13418:3;13359:67;:::i;:::-;13352:74;;13435:93;13524:3;13435:93;:::i;:::-;13553:2;13548:3;13544:12;13537:19;;13196:366;;;:::o;13568:419::-;13734:4;13772:2;13761:9;13757:18;13749:26;;13821:9;13815:4;13811:20;13807:1;13796:9;13792:17;13785:47;13849:131;13975:4;13849:131;:::i;:::-;13841:139;;13568:419;;;:::o;13993:410::-;14033:7;14056:20;14074:1;14056:20;:::i;:::-;14051:25;;14090:20;14108:1;14090:20;:::i;:::-;14085:25;;14145:1;14142;14138:9;14167:30;14185:11;14167:30;:::i;:::-;14156:41;;14346:1;14337:7;14333:15;14330:1;14327:22;14307:1;14300:9;14280:83;14257:139;;14376:18;;:::i;:::-;14257:139;14041:362;13993:410;;;;:::o;14409:182::-;14549:34;14545:1;14537:6;14533:14;14526:58;14409:182;:::o;14597:366::-;14739:3;14760:67;14824:2;14819:3;14760:67;:::i;:::-;14753:74;;14836:93;14925:3;14836:93;:::i;:::-;14954:2;14949:3;14945:12;14938:19;;14597:366;;;:::o;14969:419::-;15135:4;15173:2;15162:9;15158:18;15150:26;;15222:9;15216:4;15212:20;15208:1;15197:9;15193:17;15186:47;15250:131;15376:4;15250:131;:::i;:::-;15242:139;;14969:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "984200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "217",
								"addToWhitelist(address)": "79110",
								"claimReward()": "infinite",
								"getContractNativeBalance()": "334",
								"getContractUsdBalance()": "infinite",
								"getEligibleAddresses()": "infinite",
								"getRewardAmountInTMetis()": "infinite",
								"hasClaimed(address)": "2878",
								"owner()": "2604",
								"priceFeed()": "infinite",
								"renounceOwnership()": "30413",
								"transferOwnership(address)": "30819",
								"whitelisted(address)": "2877"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 863,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 863,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 755,
									"end": 863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 813,
									"end": 855,
									"name": "PUSH",
									"source": 0,
									"value": "5CBB0DFCEDE94DBACBDD65F2A39DDDD2497DE86E"
								},
								{
									"begin": 779,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 779,
									"end": 788,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 779,
									"end": 856,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 779,
									"end": 856,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 779,
									"end": 856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 779,
									"end": 856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 2636,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122050561b4eb0e64f94b691565459ef6d4928ea524390829990b3f61a8b6c0d1c9764736f6c63430008140033",
									".code": [
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "A9414DD8"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "A9414DD8"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "B88A802F"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "D936547E"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "E43252D7"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "FC239FFD"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "4C2B944B"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "73B2E80E"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "741BEF1A"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "A523F2C7"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
										},
										{
											"begin": 2581,
											"end": 2590,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2560,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2591,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 2636,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 869,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 869,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 491,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 491,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 397,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1365,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1365,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1989,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1989,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1485,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 442,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 442,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 442,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1124,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1124,
											"end": 1359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2172,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2172,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 925,
											"end": 932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 969,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 969,
											"end": 978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 969,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 969,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 969,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 969,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 969,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 969,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 944,
											"end": 996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1023,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1006,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1006,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "19D971E4FE8401E74000000"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1063,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1063,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1056,
											"end": 1096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 869,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 491,
											"end": 533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1455,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1485,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1535,
											"end": 1558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1527,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1527,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1618,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1597,
											"end": 1619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1588,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1673,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1673,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1737,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1753,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1708,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1708,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1785,
											"end": 1795,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1842,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1905,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH",
											"source": 0,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1881,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 442,
											"end": 485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1216,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1200,
											"end": 1217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1217,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1191,
											"end": 1241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1191,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 1262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1312,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1285,
											"end": 1313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4F783C179409B4127238BC9C990BC99B9A651666A0D20B51D6C42849EB88466D"
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1352,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2226,
											"end": 2243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FEAF968C"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2280,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2280,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 0,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2429,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2429,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2428,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2428,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2245,
											"end": 2512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1788,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1776,
											"end": 1810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2092,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2080,
											"end": 2092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2246,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2104,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2205,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2214,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2205,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2239,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2205,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2187,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2187,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2246,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2378,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2252,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2302,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2335,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2372,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 2335,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2384,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2526,
											"end": 2531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2495,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2532,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2495,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2482,
											"end": 2532,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2482,
											"end": 2532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2731,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2544,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2659,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2724,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 2659,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2899,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 3007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2909,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 3008,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 2909,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3126,
											"end": 3131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3108,
											"end": 3132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3357,
											"end": 3358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3289,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3360,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3289,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3487,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3373,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3468,
											"end": 3480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3664,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3815,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3683,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3776,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3776,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3898,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4067,
											"end": 4070,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4025,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 4025,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3935,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4120,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4226,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4233,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4417,
											"end": 4471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4471,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4417,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4564,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4487,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4573,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4487,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4573,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4647,
											"end": 4652,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4597,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4653,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 4597,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4717,
											"end": 4723,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4724,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 4799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4800,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4879,
											"end": 4882,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4820,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4883,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4820,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4813,
											"end": 4883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4959,
											"end": 4965,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4906,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4966,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 4906,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4966,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 4692,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 4710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 4995,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 4995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5190,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5231,
											"end": 5235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5224,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5248,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5368,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5365,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5265,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5373,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5265,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5491,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5386,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5451,
											"end": 5485,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5440,
											"end": 5485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5440,
											"end": 5485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5617,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5497,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5586,
											"end": 5591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5569,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5569,
											"end": 5592,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5569,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5562,
											"end": 5567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5559,
											"end": 5593,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5605,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5716,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5704,
											"end": 5717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5695,
											"end": 5717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5695,
											"end": 5717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5752,
											"end": 5757,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5726,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5726,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5623,
											"end": 5764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5846,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5770,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5972,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5852,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5941,
											"end": 5946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5924,
											"end": 5947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5947,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5924,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5948,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5904,
											"end": 5966,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5952,
											"end": 5964,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5966,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5904,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6059,
											"end": 6072,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6072,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6107,
											"end": 6112,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6081,
											"end": 6113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6113,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 6081,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 6119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6125,
											"end": 6247,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6125,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6216,
											"end": 6221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6198,
											"end": 6222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6222,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 6198,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6227,
											"end": 6239,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6125,
											"end": 6247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6125,
											"end": 6247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6348,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6357,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6390,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6357,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6521,
											"end": 6527,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6589,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6590,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6554,
											"end": 6674,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6554,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6554,
											"end": 6674,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6593,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6554,
											"end": 6674,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6554,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6793,
											"end": 6800,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6784,
											"end": 6790,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6773,
											"end": 6782,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6769,
											"end": 6791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6738,
											"end": 6801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6801,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6738,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6728,
											"end": 6801,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6728,
											"end": 6801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6850,
											"end": 6852,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6911,
											"end": 6920,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 6929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6876,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6939,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 7070,
											"end": 7077,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7050,
											"end": 7059,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7068,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7014,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7078,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7004,
											"end": 7078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 7088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7129,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7153,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7209,
											"end": 7216,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7185,
											"end": 7207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7153,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 7153,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7227,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7266,
											"end": 7269,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7293,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7348,
											"end": 7355,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7337,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7324,
											"end": 7346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7293,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7293,
											"end": 7356,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7293,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7283,
											"end": 7356,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7283,
											"end": 7356,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 7373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7504,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7537,
											"end": 7541,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7513,
											"end": 7542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7379,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7722,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7554,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7714,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420707269636520646174610000000000000000000000000000"
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7678,
											"end": 7692,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 7715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7870,
											"end": 7873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7955,
											"end": 7957,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7950,
											"end": 7953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7891,
											"end": 7958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 7891,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7958,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7958,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7967,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 7967,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8076,
											"end": 8088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8293,
											"end": 8302,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8289,
											"end": 8307,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8353,
											"end": 8362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8337,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8364,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8507,
											"end": 8511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8381,
											"end": 8512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 8381,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8705,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8525,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8573,
											"end": 8650,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8570,
											"end": 8571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8651,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8670,
											"end": 8674,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8667,
											"end": 8668,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8660,
											"end": 8675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8694,
											"end": 8698,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8711,
											"end": 8891,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8711,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8759,
											"end": 8836,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8749,
											"end": 8837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 8861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8954,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8954,
											"end": 8974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8954,
											"end": 8974,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 8954,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8949,
											"end": 8974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8949,
											"end": 8974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8988,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9006,
											"end": 9007,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8988,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8988,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8988,
											"end": 9008,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 8988,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8983,
											"end": 9008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 9032,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9032,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9032,
											"end": 9050,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 9032,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9017,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9071,
											"end": 9072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9067,
											"end": 9076,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 9082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9088,
											"end": 9253,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9088,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9228,
											"end": 9245,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9212,
											"end": 9226,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9205,
											"end": 9246,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9088,
											"end": 9253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9088,
											"end": 9253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9625,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9259,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9401,
											"end": 9404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9486,
											"end": 9488,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 9481,
											"end": 9484,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9422,
											"end": 9489,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9422,
											"end": 9489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9422,
											"end": 9489,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9422,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9415,
											"end": 9489,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9415,
											"end": 9489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9498,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9587,
											"end": 9590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9498,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9498,
											"end": 9591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9498,
											"end": 9591,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 9498,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9607,
											"end": 9619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 10050,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 9631,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9797,
											"end": 9801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9824,
											"end": 9833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9820,
											"end": 9838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9878,
											"end": 9882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9874,
											"end": 9894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9870,
											"end": 9871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9872,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9848,
											"end": 9895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10038,
											"end": 10042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9912,
											"end": 10043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9912,
											"end": 10043,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 9912,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9904,
											"end": 10043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9904,
											"end": 10043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 10050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 10050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 10050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 10050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10056,
											"end": 10221,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10056,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10196,
											"end": 10213,
											"name": "PUSH",
											"source": 3,
											"value": "416C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10194,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10173,
											"end": 10214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10056,
											"end": 10221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10056,
											"end": 10221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10593,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10227,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 10449,
											"end": 10452,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10390,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10390,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10390,
											"end": 10457,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 10390,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10383,
											"end": 10457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10383,
											"end": 10457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10555,
											"end": 10558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 10466,
											"end": 10559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10466,
											"end": 10559,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10466,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10584,
											"end": 10586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10579,
											"end": 10582,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10587,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10568,
											"end": 10587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10568,
											"end": 10587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 11018,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10599,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10765,
											"end": 10769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10801,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10780,
											"end": 10806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10852,
											"end": 10861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10842,
											"end": 10862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10836,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10823,
											"end": 10840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10816,
											"end": 10863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10880,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10880,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 11011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 11011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 11018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 11018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 11018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 11018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11190,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 11024,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "PUSH",
											"source": 3,
											"value": "4E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 11160,
											"end": 11161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11183,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11196,
											"end": 11562,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11196,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11338,
											"end": 11341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 11418,
											"end": 11421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11359,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 11359,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11359,
											"end": 11426,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 11359,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 11524,
											"end": 11527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 11435,
											"end": 11528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11435,
											"end": 11528,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 11435,
											"end": 11528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11555,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11544,
											"end": 11556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11537,
											"end": 11556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11537,
											"end": 11556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11196,
											"end": 11562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11196,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11196,
											"end": 11562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11196,
											"end": 11562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11987,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 11568,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11734,
											"end": 11738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11757,
											"end": 11775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11815,
											"end": 11819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11811,
											"end": 11831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11807,
											"end": 11808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11796,
											"end": 11805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11792,
											"end": 11809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11785,
											"end": 11832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11849,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 11975,
											"end": 11979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11849,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11849,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11849,
											"end": 11980,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 11849,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11841,
											"end": 11980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11841,
											"end": 11980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12162,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 11993,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12154,
											"name": "PUSH",
											"source": 3,
											"value": "416C72656164792077686974656C697374656400000000000000000000000000"
										},
										{
											"begin": 12129,
											"end": 12130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12117,
											"end": 12131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12110,
											"end": 12155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12168,
											"end": 12534,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 12168,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12310,
											"end": 12313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 12395,
											"end": 12397,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 12390,
											"end": 12393,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12331,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 12331,
											"end": 12398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12331,
											"end": 12398,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 12331,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12324,
											"end": 12398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12324,
											"end": 12398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12407,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 12496,
											"end": 12499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12407,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 12407,
											"end": 12500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12407,
											"end": 12500,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 12407,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12525,
											"end": 12527,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12520,
											"end": 12523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12516,
											"end": 12528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12509,
											"end": 12528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12509,
											"end": 12528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12168,
											"end": 12534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12168,
											"end": 12534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12168,
											"end": 12534,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12168,
											"end": 12534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12706,
											"end": 12710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12746,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12733,
											"end": 12742,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12729,
											"end": 12747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 12747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12721,
											"end": 12747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12793,
											"end": 12802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12787,
											"end": 12791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12783,
											"end": 12803,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12777,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12764,
											"end": 12781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12757,
											"end": 12804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 12821,
											"end": 12952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 12821,
											"end": 12952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12813,
											"end": 12952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12813,
											"end": 12952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12540,
											"end": 12959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12965,
											"end": 13190,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 12965,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13105,
											"end": 13139,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13101,
											"end": 13102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13093,
											"end": 13099,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13089,
											"end": 13103,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13082,
											"end": 13140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13174,
											"end": 13182,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13169,
											"end": 13171,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13161,
											"end": 13167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13157,
											"end": 13172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13150,
											"end": 13183,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12965,
											"end": 13190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12965,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13338,
											"end": 13341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 13423,
											"end": 13425,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 13418,
											"end": 13421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 13359,
											"end": 13426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 13359,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13426,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 13524,
											"end": 13527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 13435,
											"end": 13528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 13435,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13553,
											"end": 13555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13548,
											"end": 13551,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13544,
											"end": 13556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13537,
											"end": 13556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13537,
											"end": 13556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13196,
											"end": 13562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13196,
											"end": 13562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13734,
											"end": 13738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13772,
											"end": 13774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13761,
											"end": 13770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13749,
											"end": 13775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13811,
											"end": 13831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13807,
											"end": 13808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 13805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13792,
											"end": 13809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13785,
											"end": 13832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 13975,
											"end": 13979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 13849,
											"end": 13980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 13849,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13841,
											"end": 13980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13841,
											"end": 13980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13568,
											"end": 13987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13568,
											"end": 13987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14033,
											"end": 14040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14056,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 14056,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14056,
											"end": 14076,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 14056,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14051,
											"end": 14076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14051,
											"end": 14076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 14090,
											"end": 14110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14085,
											"end": 14110,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14085,
											"end": 14110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14145,
											"end": 14146,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14142,
											"end": 14143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 14167,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 14185,
											"end": 14196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14167,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 14167,
											"end": 14197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14167,
											"end": 14197,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 14167,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14156,
											"end": 14197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14346,
											"end": 14347,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14337,
											"end": 14344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14333,
											"end": 14348,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 14330,
											"end": 14331,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14327,
											"end": 14349,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14307,
											"end": 14308,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14300,
											"end": 14309,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14280,
											"end": 14363,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 14257,
											"end": 14396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 14257,
											"end": 14396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 14376,
											"end": 14394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 14376,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14257,
											"end": 14396,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 14257,
											"end": 14396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14041,
											"end": 14403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13993,
											"end": 14403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14591,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 14409,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14549,
											"end": 14583,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14545,
											"end": 14546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14537,
											"end": 14543,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14533,
											"end": 14547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14409,
											"end": 14591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14739,
											"end": 14742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14819,
											"end": 14822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 14760,
											"end": 14827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 14760,
											"end": 14827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14753,
											"end": 14827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 14925,
											"end": 14928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 14836,
											"end": 14929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 14836,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14954,
											"end": 14956,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14938,
											"end": 14957,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14938,
											"end": 14957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15135,
											"end": 15139,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15175,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15162,
											"end": 15171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15158,
											"end": 15176,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15150,
											"end": 15176,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15150,
											"end": 15176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15222,
											"end": 15231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15216,
											"end": 15220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15212,
											"end": 15232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15208,
											"end": 15209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15206,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15193,
											"end": 15210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15186,
											"end": 15233,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 15376,
											"end": 15380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 15250,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 15250,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15242,
											"end": 15381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15242,
											"end": 15381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14969,
											"end": 15388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/metisrewards.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToWhitelist(address)": "e43252d7",
							"claimReward()": "b88a802f",
							"getContractNativeBalance()": "a9414dd8",
							"getContractUsdBalance()": "fc239ffd",
							"getEligibleAddresses()": "a523f2c7",
							"getRewardAmountInTMetis()": "4c2b944b",
							"hasClaimed(address)": "73b2e80e",
							"owner()": "8da5cb5b",
							"priceFeed()": "741bef1a",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"whitelisted(address)": "d936547e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddressWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractNativeBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractUsdBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmountInTMetis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getContractNativeBalance()\":{\"notice\":\"\\u2705 Get tMETIS balance (in wei) on the contract\"},\"getContractUsdBalance()\":{\"notice\":\"\\u2705 Get USD equivalent of the contract\\u2019s tMETIS balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/metisrewards.sol\":\"TMetisRewardTestnet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/metisrewards.sol\":{\"keccak256\":\"0x3253e0e9d434fab60e4b8955f44d6c35847669d5a63e718b8838e366f76bf73a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc3f2e961dc719b14258ac46c83ca5356b5633795bb527f7ffaae94ff40fc75\",\"dweb:/ipfs/QmPTHNNmNaCCbEbxg7c2Y89o7RTy46ajrWooRsTL7BQ5sq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "contracts/metisrewards.sol:TMetisRewardTestnet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "contracts/metisrewards.sol:TMetisRewardTestnet",
								"label": "priceFeed",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)16"
							},
							{
								"astId": 25,
								"contract": "contracts/metisrewards.sol:TMetisRewardTestnet",
								"label": "whitelisted",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 29,
								"contract": "contracts/metisrewards.sol:TMetisRewardTestnet",
								"label": "hasClaimed",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 32,
								"contract": "contracts/metisrewards.sol:TMetisRewardTestnet",
								"label": "eligibleAddresses",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(AggregatorV3Interface)16": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getContractNativeBalance()": {
								"notice": "✅ Get tMETIS balance (in wei) on the contract"
							},
							"getContractUsdBalance()": {
								"notice": "✅ Get USD equivalent of the contract’s tMETIS balance"
							}
						},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/metisrewards.sol": {
				"ast": {
					"absolutePath": "contracts/metisrewards.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							16
						],
						"Context": [
							393
						],
						"Ownable": [
							371
						],
						"TMetisRewardTestnet": [
							258
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 259,
							"sourceUnit": 372,
							"src": "57:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "174:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "feaf968c",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "211:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "261:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "284:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "277:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "300:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "317:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "334:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 12,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:95:0"
									},
									"scope": 16,
									"src": "202:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 259,
							"src": "164:185:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 17,
										"name": "Ownable",
										"nameLocations": [
											"383:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 371,
										"src": "383:7:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "383:7:0"
								}
							],
							"canonicalName": "TMetisRewardTestnet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258,
								371,
								393
							],
							"name": "TMetisRewardTestnet",
							"nameLocation": "360:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 21,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "426:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "397:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 20,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 19,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"397:21:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 16,
											"src": "397:21:0"
										},
										"referencedDeclaration": 16,
										"src": "397:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d936547e",
									"id": 25,
									"mutability": "mutable",
									"name": "whitelisted",
									"nameLocation": "474:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "442:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "450:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "442:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "461:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b2e80e",
									"id": 29,
									"mutability": "mutable",
									"name": "hasClaimed",
									"nameLocation": "523:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "491:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 28,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "499:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "491:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 27,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "510:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "eligibleAddresses",
									"nameLocation": "557:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "539:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "539:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 31,
										"nodeType": "ArrayTypeName",
										"src": "539:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d",
									"id": 36,
									"name": "AddressWhitelisted",
									"nameLocation": "587:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "622:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "606:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:22:0"
									},
									"src": "581:47:0"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 42,
									"name": "RewardClaimed",
									"nameLocation": "639:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "669:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "653:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "683:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "675:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:38:0"
									},
									"src": "633:58:0"
								},
								{
									"anonymous": false,
									"eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
									"id": 48,
									"name": "Received",
									"nameLocation": "702:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "711:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "741:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "733:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:38:0"
									},
									"src": "696:53:0"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "769:94:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "779:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307835436242306466636564453934446261636244443635463261333964646464323439376445383665",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "813:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x5CbB0dfcedE94DbacbDD65F2a39dddd2497dE86e"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 52,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "791:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$16_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "791:65:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "779:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "779:77:0"
											}
										]
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "769:0:0"
									},
									"scope": 258,
									"src": "755:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "934:184:0",
										"statements": [
											{
												"assignments": [
													null,
													64,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "954:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 88,
														"src": "947:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 63,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "947:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 68,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 65,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "969:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "979:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "969:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "944:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 70,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1014:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1022:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1014:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652064617461",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															},
															"value": "Invalid price data"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1006:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1006:40:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000000000"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_5000000000000000000_by_1",
																		"typeString": "int_const 5000000000000000000"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "35",
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1064:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1068:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "1064:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5000000000000000000_by_1",
																		"typeString": "int_const 5000000000000000000"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "316538",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1075:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"value": "1e8"
																},
																"src": "1064:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
																	"typeString": "int_const 500000000000000000000000000"
																}
															}
														],
														"id": 81,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1063:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000000000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [
															{
																"id": 84,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "1090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 82,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1082:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1082:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1063:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 62,
												"id": 87,
												"nodeType": "Return",
												"src": "1056:40:0"
											}
										]
									},
									"functionSelector": "4c2b944b",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmountInTMetis",
									"nameLocation": "878:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:0"
									},
									"scope": 258,
									"src": "869:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1181:178:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1199:18:0",
															"subExpression": {
																"baseExpression": {
																	"id": 97,
																	"name": "whitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1200:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 99,
																"indexExpression": {
																	"id": 98,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1200:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792077686974656c6973746564",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															},
															"value": "Already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1191:50:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "whitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1251:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1251:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1271:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1251:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1251:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1308:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 110,
															"name": "eligibleAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "1285:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1303:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1285:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1285:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1285:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 117,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1347:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 116,
														"name": "AddressWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1328:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1328:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1323:29:0"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nameLocations": [
													"1171:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "1171:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:9:0"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1133:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1156:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1148:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:14:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:0"
									},
									"scope": 258,
									"src": "1124:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1438:41:0",
										"statements": [
											{
												"expression": {
													"id": 127,
													"name": "eligibleAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "1455:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 126,
												"id": 128,
												"nodeType": "Return",
												"src": "1448:24:0"
											}
										]
									},
									"functionSelector": "a523f2c7",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEligibleAddresses",
									"nameLocation": "1374:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:2:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1420:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1420:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 124,
													"nodeType": "ArrayTypeName",
													"src": "1420:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:18:0"
									},
									"scope": 258,
									"src": "1365:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1517:410:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 134,
																"name": "whitelisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1535:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 137,
															"indexExpression": {
																"expression": {
																	"id": 135,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1547:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1551:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1547:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1535:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077686974656c6973746564",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1560:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															},
															"value": "Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1527:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1527:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1596:23:0",
															"subExpression": {
																"baseExpression": {
																	"id": 142,
																	"name": "hasClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1597:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 145,
																"indexExpression": {
																	"expression": {
																		"id": 143,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1608:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1612:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1608:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1597:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1621:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1588:51:0"
											},
											{
												"assignments": [
													151
												],
												"declarations": [
													{
														"constant": false,
														"id": 151,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "1658:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "1650:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 152,
														"name": "getRewardAmountInTMetis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1673:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1650:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 158,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1724:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																				"typeString": "contract TMetisRewardTestnet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																				"typeString": "contract TMetisRewardTestnet"
																			}
																		],
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1716:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1716:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1716:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1730:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1716:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 161,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "1741:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1716:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682066756e6473",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1755:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																"typeString": "literal_string \"Not enough funds\""
															},
															"value": "Not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
																"typeString": "literal_string \"Not enough funds\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1708:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1708:66:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 166,
															"name": "hasClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1785:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"expression": {
																"id": 167,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1796:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1800:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1796:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1785:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1810:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1785:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1785:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1853:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 175,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1832:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1836:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1832:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1824:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1824:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1824:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1844:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1824:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1824:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 183,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1895:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1899:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1895:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1907:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1881:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1881:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "1876:44:0"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "1494:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:2:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:0"
									},
									"scope": 258,
									"src": "1485:442:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2055:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 197,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2080:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																	"typeString": "contract TMetisRewardTestnet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																	"typeString": "contract TMetisRewardTestnet"
																}
															],
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 195,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2086:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2072:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 200,
												"nodeType": "Return",
												"src": "2065:28:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1933:51:0",
										"text": "✅ Get tMETIS balance (in wei) on the contract"
									},
									"functionSelector": "a9414dd8",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractNativeBalance",
									"nameLocation": "1998:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:9:0"
									},
									"scope": 258,
									"src": "1989:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2245:267:0",
										"statements": [
											{
												"assignments": [
													null,
													209,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "2265:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2258:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 208,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2258:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 210,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "2280:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$16",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2290:15:0",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "2280:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2280:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2255:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "2325:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2333:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2325:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652064617461",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															},
															"value": "Invalid price data"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb",
																"typeString": "literal_string \"Invalid price data\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2317:40:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2375:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 241,
														"src": "2367:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 225,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2393:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																	"typeString": "contract TMetisRewardTestnet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TMetisRewardTestnet_$258",
																	"typeString": "contract TMetisRewardTestnet"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2385:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2385:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2399:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2385:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:39:0"
											},
											{
												"expression": {
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 230,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "2429:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 233,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 209,
																				"src": "2447:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2439:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 231,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2439:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2439:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2429:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2428:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653236",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
																"typeString": "int_const 100000000000000000000000000"
															},
															"value": "1e26"
														},
														"src": "2428:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2416:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2416:45:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2106:61:0",
										"text": "✅ Get USD equivalent of the contract’s tMETIS balance"
									},
									"functionSelector": "fc239ffd",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractUsdBalance",
									"nameLocation": "2181:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "2234:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2226:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:19:0"
									},
									"scope": 258,
									"src": "2172:340:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2545:53:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2569:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2573:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2569:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2585:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2560:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "2555:36:0"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:2:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2545:0:0"
									},
									"scope": 258,
									"src": "2518:80:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2632:2:0",
										"statements": []
									},
									"id": 257,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:2:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2632:0:0"
									},
									"scope": 258,
									"src": "2604:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 259,
							"src": "351:2285:0",
							"usedErrors": [],
							"usedEvents": [
								36,
								42,
								48,
								272
							]
						}
					],
					"src": "32:2605:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							393
						],
						"Ownable": [
							371
						]
					},
					"id": 372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 394,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "Context",
										"nameLocations": [
											"683:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "683:7:1"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 262,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 371,
							"linearizedBaseContracts": [
								371,
								393
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 272,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 277,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 282,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 371,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 285,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 288,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 290,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 296,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 371,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 304,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 306,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 371,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1885:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 320,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 319,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1895:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 316,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "1875:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:1"
									},
									"scope": 371,
									"src": "1831:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "2151:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 336,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2169:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 337,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2263:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 345,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2244:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 332,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 290,
												"src": "2141:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2108:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:1"
									},
									"scope": 371,
									"src": "2081:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2496:124:1",
										"statements": [
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "2506:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 356,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"id": 358,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:1"
											},
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 361,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "2550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 365,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2594:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 364,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2573:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "EmitStatement",
												"src": "2568:45:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 371,
									"src": "2433:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 372,
							"src": "654:1968:1",
							"usedErrors": [],
							"usedEvents": [
								272
							]
						}
					],
					"src": "102:2521:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							393
						]
					},
					"id": 394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 374,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 379,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 378,
												"id": 381,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 393,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 388,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 387,
												"id": 390,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 393,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "608:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			}
		}
	}
}